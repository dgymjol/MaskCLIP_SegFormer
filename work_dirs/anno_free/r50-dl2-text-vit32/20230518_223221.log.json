{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_11.8.r11.8/compiler.31833905_0\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.7.0\nMMCV: 1.4.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMSegmentation: 0.20.2+03c38b7", "seed": 1512992072, "exp_name": "maskclip_plus_r50_deeplabv2_r101-d8_class_weight_480x480_4k_pascal_context_59.py", "mmseg_version": "0.20.2+03c38b7", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet101_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet101_v1c'),\n    decode_head=dict(\n        type='MaskClipPlusTextHead',\n        in_channels=2048,\n        channels=1024,\n        num_classes=59,\n        dropout_ratio=0,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n        decode_module_cfg=dict(\n            type='ASPPHeadV2',\n            dilations=(6, 12, 18, 24),\n            in_channels=2048,\n            channels=1024,\n            num_classes=59,\n            dropout_ratio=0,\n            norm_cfg=dict(type='SyncBN', requires_grad=True),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            init_cfg=None),\n        text_categories=59,\n        text_channels=1024,\n        text_embeddings_path='pretrain/context_RN50_clip_text.pth',\n        text_features_path='pretrain/context_ViT32_clip_text_features.pth',\n        tau=0.25,\n        cls_bg=False,\n        norm_feat=False,\n        clip_unlabeled_cats=[\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\n            53, 54, 55, 56, 57, 58\n        ],\n        clip_cfg=dict(\n            type='ResNetClip',\n            depth=50,\n            norm_cfg=dict(type='SyncBN', requires_grad=True),\n            contract_dilation=True),\n        clip_weights_path='pretrain/RN50_clip_weights.pth',\n        reset_counter=True,\n        start_clip_guided=(1, -1),\n        start_self_train=(-1, -1)),\n    feed_img_to_decode_head=True,\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'PascalContextDataset59'\ndata_root = 'data/VOCdevkit/VOC2010/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\nimg_scale = (520, 520)\ncrop_size = (480, 480)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='LoadAnnotations',\n        reduce_zero_label=True,\n        suppress_labels=[\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\n            53, 54, 55, 56, 57, 58\n        ]),\n    dict(type='Resize', img_scale=(520, 520), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(480, 480), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(480, 480), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(520, 520),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=4,\n    train=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/train.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='LoadAnnotations',\n                reduce_zero_label=True,\n                suppress_labels=[\n                    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n                    17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n                    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\n                    47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58\n                ]),\n            dict(type='Resize', img_scale=(520, 520), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(480, 480), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(480, 480), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(520, 520),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(520, 520),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.00025)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU', pre_eval=True)\nsuppress_labels = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58\n]\nfind_unused_parameters = True\nwork_dir = 'work_dirs/anno_free/r50-dl2-text'\ngpu_ids = range(0, 1)\nauto_resume = False\nseed = 1512992072\n", "CLASSES": ["aeroplane", "bag", "bed", "bedclothes", "bench", "bicycle", "bird", "boat", "book", "bottle", "building", "bus", "cabinet", "car", "cat", "ceiling", "chair", "cloth", "computer", "cow", "cup", "curtain", "dog", "door", "fence", "floor", "flower", "food", "grass", "ground", "horse", "keyboard", "light", "motorbike", "mountain", "mouse", "person", "plate", "platform", "pottedplant", "road", "rock", "sheep", "shelves", "sidewalk", "sign", "sky", "snow", "sofa", "table", "track", "train", "tree", "truck", "tvmonitor", "wall", "water", "window", "wood"], "PALETTE": [[180, 120, 120], [6, 230, 230], [80, 50, 50], [4, 200, 3], [120, 120, 80], [140, 140, 140], [204, 5, 255], [230, 230, 230], [4, 250, 7], [224, 5, 255], [235, 255, 7], [150, 5, 61], [120, 120, 70], [8, 255, 51], [255, 6, 82], [143, 255, 140], [204, 255, 4], [255, 51, 7], [204, 70, 3], [0, 102, 200], [61, 230, 250], [255, 6, 51], [11, 102, 255], [255, 7, 71], [255, 9, 224], [9, 7, 230], [220, 220, 220], [255, 9, 92], [112, 9, 255], [8, 255, 214], [7, 255, 224], [255, 184, 6], [10, 255, 71], [255, 41, 10], [7, 255, 255], [224, 255, 8], [102, 8, 255], [255, 61, 6], [255, 194, 7], [255, 122, 8], [0, 255, 20], [255, 8, 41], [255, 5, 153], [6, 51, 255], [235, 12, 255], [160, 150, 20], [0, 163, 255], [140, 140, 140], [250, 10, 15], [20, 255, 0], [31, 255, 0], [255, 31, 0], [255, 224, 0], [153, 255, 0], [0, 0, 255], [255, 71, 0], [0, 235, 255], [0, 173, 255], [31, 0, 255]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00495, "memory": 19336, "data_time": 0.022, "decode.loss_ce": 3.0753, "decode.acc_seg": 2.961, "loss": 3.0753, "time": 1.14058}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00489, "memory": 19336, "data_time": 0.01161, "decode.loss_ce": 2.46606, "decode.acc_seg": 13.39974, "loss": 2.46606, "time": 1.01667}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00484, "memory": 19336, "data_time": 0.01171, "decode.loss_ce": 2.19606, "decode.acc_seg": 18.70138, "loss": 2.19606, "time": 1.01396}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00478, "memory": 19336, "data_time": 0.01191, "decode.loss_ce": 1.95945, "decode.acc_seg": 22.80527, "loss": 1.95945, "time": 1.02196}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00472, "memory": 19336, "data_time": 0.01173, "decode.loss_ce": 1.9332, "decode.acc_seg": 24.68442, "loss": 1.9332, "time": 1.01607}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00467, "memory": 19336, "data_time": 0.01173, "decode.loss_ce": 1.88308, "decode.acc_seg": 26.61443, "loss": 1.88308, "time": 1.01796}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00461, "memory": 19336, "data_time": 0.01184, "decode.loss_ce": 1.76504, "decode.acc_seg": 26.65749, "loss": 1.76504, "time": 1.01663}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00456, "memory": 19336, "data_time": 0.01194, "decode.loss_ce": 1.77319, "decode.acc_seg": 26.90136, "loss": 1.77319, "time": 1.01073}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0045, "memory": 19336, "data_time": 0.01198, "decode.loss_ce": 1.67586, "decode.acc_seg": 28.0189, "loss": 1.67586, "time": 1.01467}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00445, "memory": 19336, "data_time": 0.01206, "decode.loss_ce": 1.68037, "decode.acc_seg": 29.27051, "loss": 1.68037, "time": 1.01799}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00439, "memory": 19336, "data_time": 0.01211, "decode.loss_ce": 1.75228, "decode.acc_seg": 29.1635, "loss": 1.75228, "time": 1.01598}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00433, "memory": 19336, "data_time": 0.01217, "decode.loss_ce": 1.64653, "decode.acc_seg": 29.10067, "loss": 1.64653, "time": 1.01723}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.00428, "memory": 19336, "data_time": 0.05756, "decode.loss_ce": 1.64244, "decode.acc_seg": 29.72284, "loss": 1.64244, "time": 1.07272}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.00422, "memory": 19336, "data_time": 0.01168, "decode.loss_ce": 1.60365, "decode.acc_seg": 31.39052, "loss": 1.60365, "time": 1.01411}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.00417, "memory": 19336, "data_time": 0.01167, "decode.loss_ce": 1.56387, "decode.acc_seg": 30.11783, "loss": 1.56387, "time": 1.00324}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.00411, "memory": 19336, "data_time": 0.01171, "decode.loss_ce": 1.54126, "decode.acc_seg": 30.88219, "loss": 1.54126, "time": 1.01461}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.00405, "memory": 19336, "data_time": 0.01182, "decode.loss_ce": 1.5857, "decode.acc_seg": 31.18162, "loss": 1.5857, "time": 1.01409}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.004, "memory": 19336, "data_time": 0.0119, "decode.loss_ce": 1.56279, "decode.acc_seg": 31.53311, "loss": 1.56279, "time": 1.01926}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.00394, "memory": 19336, "data_time": 0.01198, "decode.loss_ce": 1.53657, "decode.acc_seg": 30.91221, "loss": 1.53657, "time": 1.01064}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.00388, "memory": 19336, "data_time": 0.01224, "decode.loss_ce": 1.50634, "decode.acc_seg": 32.31837, "loss": 1.50634, "time": 1.00932}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.00383, "memory": 19336, "data_time": 0.01225, "decode.loss_ce": 1.55175, "decode.acc_seg": 32.10944, "loss": 1.55175, "time": 1.01071}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.00377, "memory": 19336, "data_time": 0.01228, "decode.loss_ce": 1.49806, "decode.acc_seg": 30.61449, "loss": 1.49806, "time": 1.01531}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.00371, "memory": 19336, "data_time": 0.01224, "decode.loss_ce": 1.4838, "decode.acc_seg": 31.76454, "loss": 1.4838, "time": 1.02069}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.00366, "memory": 19336, "data_time": 0.01217, "decode.loss_ce": 1.51997, "decode.acc_seg": 32.81214, "loss": 1.51997, "time": 1.01401}
{"mode": "train", "epoch": 3, "iter": 1250, "lr": 0.0036, "memory": 19336, "data_time": 0.05816, "decode.loss_ce": 1.52132, "decode.acc_seg": 31.38853, "loss": 1.52132, "time": 1.06391}
{"mode": "train", "epoch": 3, "iter": 1300, "lr": 0.00354, "memory": 19336, "data_time": 0.01158, "decode.loss_ce": 1.56409, "decode.acc_seg": 33.3767, "loss": 1.56409, "time": 1.01604}
{"mode": "train", "epoch": 3, "iter": 1350, "lr": 0.00348, "memory": 19336, "data_time": 0.01177, "decode.loss_ce": 1.45069, "decode.acc_seg": 33.20563, "loss": 1.45069, "time": 1.01998}
{"mode": "train", "epoch": 3, "iter": 1400, "lr": 0.00343, "memory": 19336, "data_time": 0.01193, "decode.loss_ce": 1.44808, "decode.acc_seg": 32.13186, "loss": 1.44808, "time": 1.01804}
{"mode": "train", "epoch": 3, "iter": 1450, "lr": 0.00337, "memory": 19336, "data_time": 0.01196, "decode.loss_ce": 1.39421, "decode.acc_seg": 31.17654, "loss": 1.39421, "time": 1.01991}
{"mode": "train", "epoch": 3, "iter": 1500, "lr": 0.00331, "memory": 19336, "data_time": 0.01211, "decode.loss_ce": 1.52764, "decode.acc_seg": 33.57517, "loss": 1.52764, "time": 1.01192}
{"mode": "train", "epoch": 3, "iter": 1550, "lr": 0.00325, "memory": 19336, "data_time": 0.01222, "decode.loss_ce": 1.38744, "decode.acc_seg": 31.42606, "loss": 1.38744, "time": 1.01411}
{"mode": "train", "epoch": 3, "iter": 1600, "lr": 0.0032, "memory": 19336, "data_time": 0.01213, "decode.loss_ce": 1.43384, "decode.acc_seg": 32.65302, "loss": 1.43384, "time": 1.01735}
{"mode": "train", "epoch": 3, "iter": 1650, "lr": 0.00314, "memory": 19336, "data_time": 0.012, "decode.loss_ce": 1.41281, "decode.acc_seg": 34.5768, "loss": 1.41281, "time": 1.01195}
{"mode": "train", "epoch": 3, "iter": 1700, "lr": 0.00308, "memory": 19336, "data_time": 0.01151, "decode.loss_ce": 1.42384, "decode.acc_seg": 32.96904, "loss": 1.42384, "time": 1.01672}
{"mode": "train", "epoch": 3, "iter": 1750, "lr": 0.00302, "memory": 19336, "data_time": 0.01153, "decode.loss_ce": 1.49641, "decode.acc_seg": 33.62202, "loss": 1.49641, "time": 1.01992}
{"mode": "train", "epoch": 3, "iter": 1800, "lr": 0.00296, "memory": 19336, "data_time": 0.01163, "decode.loss_ce": 1.32861, "decode.acc_seg": 34.23744, "loss": 1.32861, "time": 1.02205}
{"mode": "train", "epoch": 3, "iter": 1850, "lr": 0.0029, "memory": 19336, "data_time": 0.01156, "decode.loss_ce": 1.42923, "decode.acc_seg": 32.43174, "loss": 1.42923, "time": 1.01809}
{"mode": "train", "epoch": 4, "iter": 1900, "lr": 0.00284, "memory": 19336, "data_time": 0.05739, "decode.loss_ce": 1.36002, "decode.acc_seg": 33.59343, "loss": 1.36002, "time": 1.0619}
{"mode": "train", "epoch": 4, "iter": 1950, "lr": 0.00279, "memory": 19336, "data_time": 0.01176, "decode.loss_ce": 1.39621, "decode.acc_seg": 33.71653, "loss": 1.39621, "time": 1.0159}
{"mode": "train", "epoch": 4, "iter": 2000, "lr": 0.00273, "memory": 19336, "data_time": 0.01183, "decode.loss_ce": 1.43152, "decode.acc_seg": 32.62824, "loss": 1.43152, "time": 1.06769}
{"mode": "val", "epoch": 4, "iter": 5104, "lr": 0.00273, "aAcc": 0.4569, "mIoU": 0.2555, "mAcc": 0.4774, "mPrec": 0.4154, "IoU.aeroplane": 0.3997, "IoU.bag": 0.0924, "IoU.bed": 0.0559, "IoU.bedclothes": 0.1269, "IoU.bench": 0.0561, "IoU.bicycle": 0.4705, "IoU.bird": 0.435, "IoU.boat": 0.2619, "IoU.book": 0.0001, "IoU.bottle": 0.5197, "IoU.building": 0.1683, "IoU.bus": 0.7327, "IoU.cabinet": 0.1737, "IoU.car": 0.6424, "IoU.cat": 0.6914, "IoU.ceiling": 0.3251, "IoU.chair": 0.224, "IoU.cloth": 0.0213, "IoU.computer": 0.0275, "IoU.cow": 0.4658, "IoU.cup": 0.1064, "IoU.curtain": 0.1859, "IoU.dog": 0.6384, "IoU.door": 0.0816, "IoU.fence": 0.148, "IoU.floor": 0.3795, "IoU.flower": 0.2267, "IoU.food": 0.1601, "IoU.grass": 0.4112, "IoU.ground": 0.06, "IoU.horse": 0.2854, "IoU.keyboard": 0.5053, "IoU.light": 0.0154, "IoU.motorbike": 0.5604, "IoU.mountain": 0.1931, "IoU.mouse": 0.0, "IoU.person": 0.3449, "IoU.plate": 0.0026, "IoU.platform": 0.0884, "IoU.pottedplant": 0.3433, "IoU.road": 0.3033, "IoU.rock": 0.1983, "IoU.sheep": 0.0884, "IoU.shelves": 0.0908, "IoU.sidewalk": 0.0884, "IoU.sign": 0.2474, "IoU.sky": 0.6282, "IoU.snow": 0.2852, "IoU.sofa": 0.3135, "IoU.table": 0.2664, "IoU.track": 0.0, "IoU.train": 0.5089, "IoU.tree": 0.3643, "IoU.truck": 0.0594, "IoU.tvmonitor": 0.3438, "IoU.wall": 0.1207, "IoU.water": 0.2585, "IoU.window": 0.1602, "IoU.wood": 0.1226, "Acc.aeroplane": 0.9336, "Acc.bag": 0.0988, "Acc.bed": 0.2499, "Acc.bedclothes": 0.3359, "Acc.bench": 0.3417, "Acc.bicycle": 0.9269, "Acc.bird": 0.7838, "Acc.boat": 0.7888, "Acc.book": 0.0001, "Acc.bottle": 0.7954, "Acc.building": 0.1745, "Acc.bus": 0.8902, "Acc.cabinet": 0.2366, "Acc.car": 0.8315, "Acc.cat": 0.7794, "Acc.ceiling": 0.5552, "Acc.chair": 0.2707, "Acc.cloth": 0.0454, "Acc.computer": 0.8155, "Acc.cow": 0.6354, "Acc.cup": 0.1414, "Acc.curtain": 0.489, "Acc.dog": 0.765, "Acc.door": 0.5314, "Acc.fence": 0.6579, "Acc.floor": 0.5253, "Acc.flower": 0.4746, "Acc.food": 0.7458, "Acc.grass": 0.4409, "Acc.ground": 0.0635, "Acc.horse": 0.9233, "Acc.keyboard": 0.53, "Acc.light": 0.0167, "Acc.motorbike": 0.7919, "Acc.mountain": 0.4827, "Acc.mouse": 0.0178, "Acc.person": 0.3846, "Acc.plate": 0.0031, "Acc.platform": 0.3405, "Acc.pottedplant": 0.771, "Acc.road": 0.3802, "Acc.rock": 0.4357, "Acc.sheep": 0.8325, "Acc.shelves": 0.3955, "Acc.sidewalk": 0.5913, "Acc.sign": 0.5605, "Acc.sky": 0.657, "Acc.snow": 0.705, "Acc.sofa": 0.6914, "Acc.table": 0.4398, "Acc.track": 0.0001, "Acc.train": 0.853, "Acc.tree": 0.383, "Acc.truck": 0.2002, "Acc.tvmonitor": 0.4006, "Acc.wall": 0.1295, "Acc.water": 0.2911, "Acc.window": 0.3637, "Acc.wood": 0.2715, "Prec.aeroplane": 0.4114, "Prec.bag": 0.5891, "Prec.bed": 0.0671, "Prec.bedclothes": 0.1694, "Prec.bench": 0.063, "Prec.bicycle": 0.4887, "Prec.bird": 0.4943, "Prec.boat": 0.2817, "Prec.book": 1.0, "Prec.bottle": 0.5999, "Prec.building": 0.8245, "Prec.bus": 0.8054, "Prec.cabinet": 0.3954, "Prec.car": 0.7385, "Prec.cat": 0.8597, "Prec.ceiling": 0.4397, "Prec.chair": 0.5653, "Prec.cloth": 0.0386, "Prec.computer": 0.0276, "Prec.cow": 0.6358, "Prec.cup": 0.3002, "Prec.curtain": 0.2306, "Prec.dog": 0.7942, "Prec.door": 0.0879, "Prec.fence": 0.1604, "Prec.floor": 0.5776, "Prec.flower": 0.3026, "Prec.food": 0.1694, "Prec.grass": 0.8591, "Prec.ground": 0.5269, "Prec.horse": 0.2923, "Prec.keyboard": 0.9157, "Prec.light": 0.1649, "Prec.motorbike": 0.6572, "Prec.mountain": 0.2435, "Prec.mouse": 0.0, "Prec.person": 0.7696, "Prec.plate": 0.0162, "Prec.platform": 0.1067, "Prec.pottedplant": 0.3823, "Prec.road": 0.5999, "Prec.rock": 0.2668, "Prec.sheep": 0.09, "Prec.shelves": 0.1054, "Prec.sidewalk": 0.0941, "Prec.sign": 0.307, "Prec.sky": 0.9347, "Prec.snow": 0.3238, "Prec.sofa": 0.3646, "Prec.table": 0.4033, "Prec.track": 0.0001, "Prec.train": 0.5578, "Prec.tree": 0.8815, "Prec.truck": 0.078, "Prec.tvmonitor": 0.708, "Prec.wall": 0.6385, "Prec.water": 0.6976, "Prec.window": 0.2225, "Prec.wood": 0.1827}
{"mode": "train", "epoch": 4, "iter": 2050, "lr": 0.00267, "memory": 19336, "data_time": 30.46984, "decode.loss_ce": 1.38244, "decode.acc_seg": 32.21829, "loss": 1.38244, "time": 31.4677}
{"mode": "train", "epoch": 4, "iter": 2100, "lr": 0.00261, "memory": 19336, "data_time": 0.01085, "decode.loss_ce": 1.3919, "decode.acc_seg": 34.37115, "loss": 1.3919, "time": 1.03077}
{"mode": "train", "epoch": 4, "iter": 2150, "lr": 0.00255, "memory": 19336, "data_time": 0.01105, "decode.loss_ce": 1.40745, "decode.acc_seg": 35.08588, "loss": 1.40745, "time": 1.00996}
{"mode": "train", "epoch": 4, "iter": 2200, "lr": 0.00249, "memory": 19336, "data_time": 0.0114, "decode.loss_ce": 1.47366, "decode.acc_seg": 34.57212, "loss": 1.47366, "time": 1.0179}
{"mode": "train", "epoch": 4, "iter": 2250, "lr": 0.00243, "memory": 19336, "data_time": 0.0114, "decode.loss_ce": 1.38604, "decode.acc_seg": 33.16648, "loss": 1.38604, "time": 1.01403}
{"mode": "train", "epoch": 4, "iter": 2300, "lr": 0.00237, "memory": 19336, "data_time": 0.01138, "decode.loss_ce": 1.39072, "decode.acc_seg": 35.2417, "loss": 1.39072, "time": 1.01002}
{"mode": "train", "epoch": 4, "iter": 2350, "lr": 0.00231, "memory": 19336, "data_time": 0.01147, "decode.loss_ce": 1.3865, "decode.acc_seg": 33.68203, "loss": 1.3865, "time": 1.01328}
{"mode": "train", "epoch": 4, "iter": 2400, "lr": 0.00225, "memory": 19336, "data_time": 0.01133, "decode.loss_ce": 1.33081, "decode.acc_seg": 33.12838, "loss": 1.33081, "time": 1.01267}
{"mode": "train", "epoch": 4, "iter": 2450, "lr": 0.00219, "memory": 19336, "data_time": 0.01181, "decode.loss_ce": 1.3542, "decode.acc_seg": 33.93625, "loss": 1.3542, "time": 1.01732}
{"mode": "train", "epoch": 5, "iter": 2500, "lr": 0.00213, "memory": 19336, "data_time": 0.05809, "decode.loss_ce": 1.45891, "decode.acc_seg": 35.08059, "loss": 1.45891, "time": 1.05676}
{"mode": "train", "epoch": 5, "iter": 2550, "lr": 0.00207, "memory": 19336, "data_time": 0.01104, "decode.loss_ce": 1.35758, "decode.acc_seg": 33.4225, "loss": 1.35758, "time": 1.01587}
{"mode": "train", "epoch": 5, "iter": 2600, "lr": 0.00201, "memory": 19336, "data_time": 0.01144, "decode.loss_ce": 1.36804, "decode.acc_seg": 33.24463, "loss": 1.36804, "time": 1.01004}
{"mode": "train", "epoch": 5, "iter": 2650, "lr": 0.00194, "memory": 19336, "data_time": 0.01161, "decode.loss_ce": 1.3865, "decode.acc_seg": 36.29418, "loss": 1.3865, "time": 1.01609}
{"mode": "train", "epoch": 5, "iter": 2700, "lr": 0.00188, "memory": 19336, "data_time": 0.01149, "decode.loss_ce": 1.39223, "decode.acc_seg": 33.79668, "loss": 1.39223, "time": 1.01182}
{"mode": "train", "epoch": 5, "iter": 2750, "lr": 0.00182, "memory": 19336, "data_time": 0.01189, "decode.loss_ce": 1.43286, "decode.acc_seg": 35.3877, "loss": 1.43286, "time": 1.01602}
{"mode": "train", "epoch": 5, "iter": 2800, "lr": 0.00176, "memory": 19336, "data_time": 0.01202, "decode.loss_ce": 1.25172, "decode.acc_seg": 33.08034, "loss": 1.25172, "time": 1.01206}
{"mode": "train", "epoch": 5, "iter": 2850, "lr": 0.0017, "memory": 19336, "data_time": 0.01213, "decode.loss_ce": 1.36615, "decode.acc_seg": 35.63249, "loss": 1.36615, "time": 1.01399}
{"mode": "train", "epoch": 5, "iter": 2900, "lr": 0.00163, "memory": 19336, "data_time": 0.0121, "decode.loss_ce": 1.30736, "decode.acc_seg": 35.11744, "loss": 1.30736, "time": 1.01994}
{"mode": "train", "epoch": 5, "iter": 2950, "lr": 0.00157, "memory": 19336, "data_time": 0.01207, "decode.loss_ce": 1.32924, "decode.acc_seg": 35.47868, "loss": 1.32924, "time": 1.02007}
{"mode": "train", "epoch": 5, "iter": 3000, "lr": 0.00151, "memory": 19336, "data_time": 0.01203, "decode.loss_ce": 1.36689, "decode.acc_seg": 35.2243, "loss": 1.36689, "time": 1.01807}
{"mode": "train", "epoch": 5, "iter": 3050, "lr": 0.00144, "memory": 19336, "data_time": 0.01211, "decode.loss_ce": 1.25947, "decode.acc_seg": 34.86296, "loss": 1.25947, "time": 1.01586}
{"mode": "train", "epoch": 5, "iter": 3100, "lr": 0.00138, "memory": 19336, "data_time": 0.01227, "decode.loss_ce": 1.28967, "decode.acc_seg": 34.49281, "loss": 1.28967, "time": 1.02195}
{"mode": "train", "epoch": 6, "iter": 3150, "lr": 0.00132, "memory": 19336, "data_time": 0.0579, "decode.loss_ce": 1.30433, "decode.acc_seg": 34.73931, "loss": 1.30433, "time": 1.06014}
{"mode": "train", "epoch": 6, "iter": 3200, "lr": 0.00125, "memory": 19336, "data_time": 0.01175, "decode.loss_ce": 1.32662, "decode.acc_seg": 34.61949, "loss": 1.32662, "time": 1.01993}
{"mode": "train", "epoch": 6, "iter": 3250, "lr": 0.00119, "memory": 19336, "data_time": 0.01192, "decode.loss_ce": 1.34248, "decode.acc_seg": 35.11586, "loss": 1.34248, "time": 1.01931}
{"mode": "train", "epoch": 6, "iter": 3300, "lr": 0.00112, "memory": 19336, "data_time": 0.0119, "decode.loss_ce": 1.29277, "decode.acc_seg": 35.92685, "loss": 1.29277, "time": 1.01473}
{"mode": "train", "epoch": 6, "iter": 3350, "lr": 0.00106, "memory": 19336, "data_time": 0.01202, "decode.loss_ce": 1.33554, "decode.acc_seg": 36.13729, "loss": 1.33554, "time": 1.01997}
{"mode": "train", "epoch": 6, "iter": 3400, "lr": 0.00099, "memory": 19336, "data_time": 0.01225, "decode.loss_ce": 1.35553, "decode.acc_seg": 35.06028, "loss": 1.35553, "time": 1.00596}
{"mode": "train", "epoch": 6, "iter": 3450, "lr": 0.00092, "memory": 19336, "data_time": 0.01233, "decode.loss_ce": 1.31527, "decode.acc_seg": 34.63574, "loss": 1.31527, "time": 1.002}
{"mode": "train", "epoch": 6, "iter": 3500, "lr": 0.00086, "memory": 19336, "data_time": 0.013, "decode.loss_ce": 1.38061, "decode.acc_seg": 34.6779, "loss": 1.38061, "time": 1.02006}
{"mode": "train", "epoch": 6, "iter": 3550, "lr": 0.00079, "memory": 19336, "data_time": 0.01238, "decode.loss_ce": 1.34936, "decode.acc_seg": 37.08332, "loss": 1.34936, "time": 1.01797}
{"mode": "train", "epoch": 6, "iter": 3600, "lr": 0.00072, "memory": 19336, "data_time": 0.0124, "decode.loss_ce": 1.3499, "decode.acc_seg": 36.25163, "loss": 1.3499, "time": 1.02195}
{"mode": "train", "epoch": 6, "iter": 3650, "lr": 0.00065, "memory": 19336, "data_time": 0.01214, "decode.loss_ce": 1.34118, "decode.acc_seg": 35.41779, "loss": 1.34118, "time": 1.00605}
{"mode": "train", "epoch": 6, "iter": 3700, "lr": 0.00058, "memory": 19336, "data_time": 0.01217, "decode.loss_ce": 1.34619, "decode.acc_seg": 34.43196, "loss": 1.34619, "time": 1.01001}
{"mode": "train", "epoch": 7, "iter": 3750, "lr": 0.00051, "memory": 19336, "data_time": 0.05805, "decode.loss_ce": 1.30321, "decode.acc_seg": 34.02515, "loss": 1.30321, "time": 1.06401}
{"mode": "train", "epoch": 7, "iter": 3800, "lr": 0.00043, "memory": 19336, "data_time": 0.01139, "decode.loss_ce": 1.37538, "decode.acc_seg": 35.63271, "loss": 1.37538, "time": 1.00988}
{"mode": "train", "epoch": 7, "iter": 3850, "lr": 0.00036, "memory": 19336, "data_time": 0.01162, "decode.loss_ce": 1.31726, "decode.acc_seg": 33.6345, "loss": 1.31726, "time": 1.01203}
{"mode": "train", "epoch": 7, "iter": 3900, "lr": 0.00028, "memory": 19336, "data_time": 0.01184, "decode.loss_ce": 1.2946, "decode.acc_seg": 35.85491, "loss": 1.2946, "time": 1.01531}
{"mode": "train", "epoch": 7, "iter": 3950, "lr": 0.0002, "memory": 19336, "data_time": 0.01191, "decode.loss_ce": 1.27318, "decode.acc_seg": 34.8032, "loss": 1.27318, "time": 1.01061}
{"mode": "train", "epoch": 7, "iter": 4000, "lr": 0.0001, "memory": 19336, "data_time": 0.01197, "decode.loss_ce": 1.32315, "decode.acc_seg": 36.8842, "loss": 1.32315, "time": 1.06644}
{"mode": "val", "epoch": 7, "iter": 5104, "lr": 0.0001, "aAcc": 0.4592, "mIoU": 0.2568, "mAcc": 0.4741, "mPrec": 0.4106, "IoU.aeroplane": 0.4225, "IoU.bag": 0.1296, "IoU.bed": 0.0561, "IoU.bedclothes": 0.1229, "IoU.bench": 0.0492, "IoU.bicycle": 0.4737, "IoU.bird": 0.4518, "IoU.boat": 0.252, "IoU.book": 0.0001, "IoU.bottle": 0.5102, "IoU.building": 0.1658, "IoU.bus": 0.7331, "IoU.cabinet": 0.1726, "IoU.car": 0.6367, "IoU.cat": 0.684, "IoU.ceiling": 0.3058, "IoU.chair": 0.2347, "IoU.cloth": 0.0241, "IoU.computer": 0.0235, "IoU.cow": 0.3924, "IoU.cup": 0.1614, "IoU.curtain": 0.1676, "IoU.dog": 0.6261, "IoU.door": 0.0847, "IoU.fence": 0.1328, "IoU.floor": 0.3715, "IoU.flower": 0.2329, "IoU.food": 0.1657, "IoU.grass": 0.4726, "IoU.ground": 0.0693, "IoU.horse": 0.2897, "IoU.keyboard": 0.485, "IoU.light": 0.0565, "IoU.motorbike": 0.5527, "IoU.mountain": 0.1718, "IoU.mouse": 0.0001, "IoU.person": 0.3282, "IoU.plate": 0.0094, "IoU.platform": 0.0874, "IoU.pottedplant": 0.3347, "IoU.road": 0.2776, "IoU.rock": 0.178, "IoU.sheep": 0.1039, "IoU.shelves": 0.0919, "IoU.sidewalk": 0.0982, "IoU.sign": 0.2415, "IoU.sky": 0.6201, "IoU.snow": 0.2947, "IoU.sofa": 0.3189, "IoU.table": 0.2625, "IoU.track": 0.0002, "IoU.train": 0.5222, "IoU.tree": 0.3535, "IoU.truck": 0.0635, "IoU.tvmonitor": 0.3339, "IoU.wall": 0.1414, "IoU.water": 0.3405, "IoU.window": 0.1478, "IoU.wood": 0.1225, "Acc.aeroplane": 0.9058, "Acc.bag": 0.1645, "Acc.bed": 0.2213, "Acc.bedclothes": 0.3326, "Acc.bench": 0.3133, "Acc.bicycle": 0.9091, "Acc.bird": 0.8098, "Acc.boat": 0.7338, "Acc.book": 0.0001, "Acc.bottle": 0.7449, "Acc.building": 0.1717, "Acc.bus": 0.8538, "Acc.cabinet": 0.2247, "Acc.car": 0.8043, "Acc.cat": 0.7673, "Acc.ceiling": 0.5217, "Acc.chair": 0.285, "Acc.cloth": 0.0506, "Acc.computer": 0.8212, "Acc.cow": 0.5705, "Acc.cup": 0.2321, "Acc.curtain": 0.481, "Acc.dog": 0.7357, "Acc.door": 0.5372, "Acc.fence": 0.6333, "Acc.floor": 0.5274, "Acc.flower": 0.4397, "Acc.food": 0.7068, "Acc.grass": 0.5146, "Acc.ground": 0.0731, "Acc.horse": 0.9081, "Acc.keyboard": 0.5217, "Acc.light": 0.0916, "Acc.motorbike": 0.7819, "Acc.mountain": 0.4267, "Acc.mouse": 0.0425, "Acc.person": 0.3821, "Acc.plate": 0.0128, "Acc.platform": 0.3318, "Acc.pottedplant": 0.7657, "Acc.road": 0.344, "Acc.rock": 0.4837, "Acc.sheep": 0.8056, "Acc.shelves": 0.3863, "Acc.sidewalk": 0.5745, "Acc.sign": 0.4976, "Acc.sky": 0.6499, "Acc.snow": 0.7207, "Acc.sofa": 0.6733, "Acc.table": 0.4123, "Acc.track": 0.0003, "Acc.train": 0.8331, "Acc.tree": 0.3694, "Acc.truck": 0.2306, "Acc.tvmonitor": 0.4212, "Acc.wall": 0.1534, "Acc.water": 0.3912, "Acc.window": 0.3554, "Acc.wood": 0.3171, "Prec.aeroplane": 0.4419, "Prec.bag": 0.3788, "Prec.bed": 0.0698, "Prec.bedclothes": 0.1631, "Prec.bench": 0.0552, "Prec.bicycle": 0.4973, "Prec.bird": 0.5054, "Prec.boat": 0.2773, "Prec.book": 1.0, "Prec.bottle": 0.6182, "Prec.building": 0.8283, "Prec.bus": 0.8383, "Prec.cabinet": 0.4265, "Prec.car": 0.7533, "Prec.cat": 0.8631, "Prec.ceiling": 0.425, "Prec.chair": 0.5706, "Prec.cloth": 0.044, "Prec.computer": 0.0236, "Prec.cow": 0.5569, "Prec.cup": 0.3463, "Prec.curtain": 0.2046, "Prec.dog": 0.8079, "Prec.door": 0.0913, "Prec.fence": 0.1439, "Prec.floor": 0.5568, "Prec.flower": 0.3313, "Prec.food": 0.1779, "Prec.grass": 0.8527, "Prec.ground": 0.567, "Prec.horse": 0.2984, "Prec.keyboard": 0.8733, "Prec.light": 0.1285, "Prec.motorbike": 0.6534, "Prec.mountain": 0.2234, "Prec.mouse": 0.0001, "Prec.person": 0.6995, "Prec.plate": 0.0343, "Prec.platform": 0.1061, "Prec.pottedplant": 0.3729, "Prec.road": 0.59, "Prec.rock": 0.2197, "Prec.sheep": 0.1066, "Prec.shelves": 0.1076, "Prec.sidewalk": 0.1059, "Prec.sign": 0.3194, "Prec.sky": 0.9313, "Prec.snow": 0.3327, "Prec.sofa": 0.3773, "Prec.table": 0.4196, "Prec.track": 0.0004, "Prec.train": 0.5832, "Prec.tree": 0.8912, "Prec.truck": 0.0806, "Prec.tvmonitor": 0.6169, "Prec.wall": 0.6438, "Prec.water": 0.7244, "Prec.window": 0.202, "Prec.wood": 0.1664}
