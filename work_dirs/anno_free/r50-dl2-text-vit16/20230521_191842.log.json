{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_11.8.r11.8/compiler.31833905_0\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.7.0\nMMCV: 1.4.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMSegmentation: 0.20.2+03c38b7", "seed": 1449356742, "exp_name": "maskclip_plus_r50_deeplabv2_r101-d8_class_weight_480x480_4k_pascal_context_59.py", "mmseg_version": "0.20.2+03c38b7", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet101_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet101_v1c'),\n    decode_head=dict(\n        type='MaskClipPlusTextHead',\n        in_channels=2048,\n        channels=1024,\n        num_classes=59,\n        dropout_ratio=0,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n        decode_module_cfg=dict(\n            type='ASPPHeadV2',\n            dilations=(6, 12, 18, 24),\n            in_channels=2048,\n            channels=1024,\n            num_classes=59,\n            dropout_ratio=0,\n            norm_cfg=dict(type='SyncBN', requires_grad=True),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            init_cfg=None),\n        text_categories=59,\n        text_channels=1024,\n        text_embeddings_path='pretrain/context_RN50_clip_text.pth',\n        text_features_path='pretrain/context_ViT16_clip_text_features.pth',\n        tau=0.25,\n        cls_bg=False,\n        norm_feat=False,\n        clip_unlabeled_cats=[\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\n            53, 54, 55, 56, 57, 58\n        ],\n        clip_cfg=dict(\n            type='ResNetClip',\n            depth=50,\n            norm_cfg=dict(type='SyncBN', requires_grad=True),\n            contract_dilation=True),\n        clip_weights_path='pretrain/RN50_clip_weights.pth',\n        reset_counter=True,\n        start_clip_guided=(1, -1),\n        start_self_train=(-1, -1)),\n    feed_img_to_decode_head=True,\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'PascalContextDataset59'\ndata_root = 'data/VOCdevkit/VOC2010/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\nimg_scale = (520, 520)\ncrop_size = (480, 480)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='LoadAnnotations',\n        reduce_zero_label=True,\n        suppress_labels=[\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\n            53, 54, 55, 56, 57, 58\n        ]),\n    dict(type='Resize', img_scale=(520, 520), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(480, 480), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(480, 480), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(520, 520),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=4,\n    train=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/train.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='LoadAnnotations',\n                reduce_zero_label=True,\n                suppress_labels=[\n                    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n                    17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n                    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\n                    47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58\n                ]),\n            dict(type='Resize', img_scale=(520, 520), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(480, 480), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(480, 480), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(520, 520),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(520, 520),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.00025)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU', pre_eval=True)\nsuppress_labels = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58\n]\nfind_unused_parameters = True\nwork_dir = 'work_dirs/anno_free/r50-dl2-text-vit16'\ngpu_ids = range(0, 1)\nauto_resume = False\nseed = 1449356742\n", "CLASSES": ["aeroplane", "bag", "bed", "bedclothes", "bench", "bicycle", "bird", "boat", "book", "bottle", "building", "bus", "cabinet", "car", "cat", "ceiling", "chair", "cloth", "computer", "cow", "cup", "curtain", "dog", "door", "fence", "floor", "flower", "food", "grass", "ground", "horse", "keyboard", "light", "motorbike", "mountain", "mouse", "person", "plate", "platform", "pottedplant", "road", "rock", "sheep", "shelves", "sidewalk", "sign", "sky", "snow", "sofa", "table", "track", "train", "tree", "truck", "tvmonitor", "wall", "water", "window", "wood"], "PALETTE": [[180, 120, 120], [6, 230, 230], [80, 50, 50], [4, 200, 3], [120, 120, 80], [140, 140, 140], [204, 5, 255], [230, 230, 230], [4, 250, 7], [224, 5, 255], [235, 255, 7], [150, 5, 61], [120, 120, 70], [8, 255, 51], [255, 6, 82], [143, 255, 140], [204, 255, 4], [255, 51, 7], [204, 70, 3], [0, 102, 200], [61, 230, 250], [255, 6, 51], [11, 102, 255], [255, 7, 71], [255, 9, 224], [9, 7, 230], [220, 220, 220], [255, 9, 92], [112, 9, 255], [8, 255, 214], [7, 255, 224], [255, 184, 6], [10, 255, 71], [255, 41, 10], [7, 255, 255], [224, 255, 8], [102, 8, 255], [255, 61, 6], [255, 194, 7], [255, 122, 8], [0, 255, 20], [255, 8, 41], [255, 5, 153], [6, 51, 255], [235, 12, 255], [160, 150, 20], [0, 163, 255], [140, 140, 140], [250, 10, 15], [20, 255, 0], [31, 255, 0], [255, 31, 0], [255, 224, 0], [153, 255, 0], [0, 0, 255], [255, 71, 0], [0, 235, 255], [0, 173, 255], [31, 0, 255]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00495, "memory": 19335, "data_time": 0.02322, "decode.loss_ce": 3.05967, "decode.acc_seg": 3.03215, "loss": 3.05967, "time": 1.14868}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00489, "memory": 19335, "data_time": 0.01071, "decode.loss_ce": 2.56581, "decode.acc_seg": 11.24168, "loss": 2.56581, "time": 1.03668}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00484, "memory": 19335, "data_time": 0.011, "decode.loss_ce": 2.3612, "decode.acc_seg": 18.57875, "loss": 2.3612, "time": 1.02401}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00478, "memory": 19335, "data_time": 0.0111, "decode.loss_ce": 2.05475, "decode.acc_seg": 21.00298, "loss": 2.05475, "time": 1.02196}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00472, "memory": 19335, "data_time": 0.01145, "decode.loss_ce": 1.9833, "decode.acc_seg": 23.91303, "loss": 1.9833, "time": 1.01801}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00467, "memory": 19335, "data_time": 0.01131, "decode.loss_ce": 1.92706, "decode.acc_seg": 25.06888, "loss": 1.92706, "time": 1.02603}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00461, "memory": 19335, "data_time": 0.01143, "decode.loss_ce": 1.86053, "decode.acc_seg": 26.32613, "loss": 1.86053, "time": 1.01597}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00456, "memory": 19335, "data_time": 0.01167, "decode.loss_ce": 1.73436, "decode.acc_seg": 27.11145, "loss": 1.73436, "time": 1.01593}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0045, "memory": 19335, "data_time": 0.01167, "decode.loss_ce": 1.64975, "decode.acc_seg": 25.97104, "loss": 1.64975, "time": 1.02331}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00445, "memory": 19335, "data_time": 0.01173, "decode.loss_ce": 1.61266, "decode.acc_seg": 27.47678, "loss": 1.61266, "time": 1.01083}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00439, "memory": 19335, "data_time": 0.01178, "decode.loss_ce": 1.58938, "decode.acc_seg": 30.06773, "loss": 1.58938, "time": 1.00985}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00433, "memory": 19335, "data_time": 0.0119, "decode.loss_ce": 1.73231, "decode.acc_seg": 28.03055, "loss": 1.73231, "time": 1.01996}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.00428, "memory": 19335, "data_time": 0.05782, "decode.loss_ce": 1.67775, "decode.acc_seg": 28.48315, "loss": 1.67775, "time": 1.07812}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.00422, "memory": 19335, "data_time": 0.01137, "decode.loss_ce": 1.63586, "decode.acc_seg": 29.88096, "loss": 1.63586, "time": 1.02392}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.00417, "memory": 19335, "data_time": 0.01134, "decode.loss_ce": 1.58191, "decode.acc_seg": 28.70485, "loss": 1.58191, "time": 1.02}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.00411, "memory": 19335, "data_time": 0.01152, "decode.loss_ce": 1.56006, "decode.acc_seg": 29.73186, "loss": 1.56006, "time": 1.01805}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.00405, "memory": 19335, "data_time": 0.01153, "decode.loss_ce": 1.69708, "decode.acc_seg": 29.37843, "loss": 1.69708, "time": 1.02191}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.004, "memory": 19335, "data_time": 0.01176, "decode.loss_ce": 1.67733, "decode.acc_seg": 30.07932, "loss": 1.67733, "time": 1.02407}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.00394, "memory": 19335, "data_time": 0.01186, "decode.loss_ce": 1.53545, "decode.acc_seg": 30.60219, "loss": 1.53545, "time": 1.02606}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.00388, "memory": 19335, "data_time": 0.01213, "decode.loss_ce": 1.58242, "decode.acc_seg": 31.26827, "loss": 1.58242, "time": 1.022}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.00383, "memory": 19335, "data_time": 0.01211, "decode.loss_ce": 1.55568, "decode.acc_seg": 30.82724, "loss": 1.55568, "time": 1.02388}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.00377, "memory": 19335, "data_time": 0.01224, "decode.loss_ce": 1.62432, "decode.acc_seg": 29.6455, "loss": 1.62432, "time": 1.01729}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.00371, "memory": 19335, "data_time": 0.01207, "decode.loss_ce": 1.6008, "decode.acc_seg": 30.06731, "loss": 1.6008, "time": 1.01674}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.00366, "memory": 19335, "data_time": 0.0121, "decode.loss_ce": 1.61167, "decode.acc_seg": 31.10133, "loss": 1.61167, "time": 1.02199}
{"mode": "train", "epoch": 3, "iter": 1250, "lr": 0.0036, "memory": 19335, "data_time": 0.05827, "decode.loss_ce": 1.48995, "decode.acc_seg": 31.47694, "loss": 1.48995, "time": 1.06195}
{"mode": "train", "epoch": 3, "iter": 1300, "lr": 0.00354, "memory": 19335, "data_time": 0.0114, "decode.loss_ce": 1.54601, "decode.acc_seg": 31.86409, "loss": 1.54601, "time": 1.0161}
{"mode": "train", "epoch": 3, "iter": 1350, "lr": 0.00348, "memory": 19335, "data_time": 0.01162, "decode.loss_ce": 1.5372, "decode.acc_seg": 30.46099, "loss": 1.5372, "time": 1.01189}
{"mode": "train", "epoch": 3, "iter": 1400, "lr": 0.00343, "memory": 19335, "data_time": 0.01195, "decode.loss_ce": 1.53687, "decode.acc_seg": 32.12323, "loss": 1.53687, "time": 1.00805}
{"mode": "train", "epoch": 3, "iter": 1450, "lr": 0.00337, "memory": 19335, "data_time": 0.01181, "decode.loss_ce": 1.51898, "decode.acc_seg": 31.87739, "loss": 1.51898, "time": 1.01595}
{"mode": "train", "epoch": 3, "iter": 1500, "lr": 0.00331, "memory": 19335, "data_time": 0.01201, "decode.loss_ce": 1.50472, "decode.acc_seg": 32.84468, "loss": 1.50472, "time": 1.01392}
{"mode": "train", "epoch": 3, "iter": 1550, "lr": 0.00325, "memory": 19335, "data_time": 0.01207, "decode.loss_ce": 1.46364, "decode.acc_seg": 33.20185, "loss": 1.46364, "time": 1.01933}
{"mode": "train", "epoch": 3, "iter": 1600, "lr": 0.0032, "memory": 19335, "data_time": 0.0121, "decode.loss_ce": 1.45917, "decode.acc_seg": 31.95885, "loss": 1.45917, "time": 1.02067}
{"mode": "train", "epoch": 3, "iter": 1650, "lr": 0.00314, "memory": 19335, "data_time": 0.01213, "decode.loss_ce": 1.44252, "decode.acc_seg": 32.12584, "loss": 1.44252, "time": 1.02606}
{"mode": "train", "epoch": 3, "iter": 1700, "lr": 0.00308, "memory": 19335, "data_time": 0.01215, "decode.loss_ce": 1.45385, "decode.acc_seg": 31.81226, "loss": 1.45385, "time": 1.02198}
{"mode": "train", "epoch": 3, "iter": 1750, "lr": 0.00302, "memory": 19335, "data_time": 0.01204, "decode.loss_ce": 1.42136, "decode.acc_seg": 32.51941, "loss": 1.42136, "time": 1.02207}
{"mode": "train", "epoch": 3, "iter": 1800, "lr": 0.00296, "memory": 19335, "data_time": 0.0121, "decode.loss_ce": 1.46192, "decode.acc_seg": 34.16564, "loss": 1.46192, "time": 1.01398}
{"mode": "train", "epoch": 3, "iter": 1850, "lr": 0.0029, "memory": 19335, "data_time": 0.01197, "decode.loss_ce": 1.38967, "decode.acc_seg": 32.9184, "loss": 1.38967, "time": 1.01994}
{"mode": "train", "epoch": 4, "iter": 1900, "lr": 0.00284, "memory": 19335, "data_time": 0.05843, "decode.loss_ce": 1.46588, "decode.acc_seg": 33.9019, "loss": 1.46588, "time": 1.07402}
{"mode": "train", "epoch": 4, "iter": 1950, "lr": 0.00279, "memory": 19335, "data_time": 0.01156, "decode.loss_ce": 1.39264, "decode.acc_seg": 32.48825, "loss": 1.39264, "time": 1.02185}
{"mode": "train", "epoch": 4, "iter": 2000, "lr": 0.00273, "memory": 19335, "data_time": 0.01163, "decode.loss_ce": 1.44354, "decode.acc_seg": 32.15729, "loss": 1.44354, "time": 1.08449}
{"mode": "val", "epoch": 4, "iter": 5104, "lr": 0.00273, "aAcc": 0.4676, "mIoU": 0.2558, "mAcc": 0.47, "mPrec": 0.408, "IoU.aeroplane": 0.4311, "IoU.bag": 0.0667, "IoU.bed": 0.0651, "IoU.bedclothes": 0.1208, "IoU.bench": 0.051, "IoU.bicycle": 0.4756, "IoU.bird": 0.4907, "IoU.boat": 0.2648, "IoU.book": 0.0, "IoU.bottle": 0.5034, "IoU.building": 0.1647, "IoU.bus": 0.7478, "IoU.cabinet": 0.1606, "IoU.car": 0.6403, "IoU.cat": 0.718, "IoU.ceiling": 0.3138, "IoU.chair": 0.2565, "IoU.cloth": 0.0191, "IoU.computer": 0.0245, "IoU.cow": 0.4329, "IoU.cup": 0.101, "IoU.curtain": 0.1591, "IoU.dog": 0.6504, "IoU.door": 0.0792, "IoU.fence": 0.142, "IoU.floor": 0.3444, "IoU.flower": 0.1975, "IoU.food": 0.1736, "IoU.grass": 0.4871, "IoU.ground": 0.0662, "IoU.horse": 0.3099, "IoU.keyboard": 0.3772, "IoU.light": 0.0037, "IoU.motorbike": 0.5535, "IoU.mountain": 0.1966, "IoU.mouse": 0.0, "IoU.person": 0.3539, "IoU.plate": 0.0025, "IoU.platform": 0.0862, "IoU.pottedplant": 0.3416, "IoU.road": 0.3128, "IoU.rock": 0.1988, "IoU.sheep": 0.1066, "IoU.shelves": 0.0961, "IoU.sidewalk": 0.0968, "IoU.sign": 0.2368, "IoU.sky": 0.6299, "IoU.snow": 0.314, "IoU.sofa": 0.3174, "IoU.table": 0.2686, "IoU.track": 0.0009, "IoU.train": 0.5416, "IoU.tree": 0.4027, "IoU.truck": 0.0669, "IoU.tvmonitor": 0.2735, "IoU.wall": 0.1142, "IoU.water": 0.2761, "IoU.window": 0.1427, "IoU.wood": 0.1207, "Acc.aeroplane": 0.9339, "Acc.bag": 0.0716, "Acc.bed": 0.2336, "Acc.bedclothes": 0.4112, "Acc.bench": 0.3612, "Acc.bicycle": 0.9057, "Acc.bird": 0.8415, "Acc.boat": 0.7634, "Acc.book": 0.0, "Acc.bottle": 0.7607, "Acc.building": 0.1716, "Acc.bus": 0.8695, "Acc.cabinet": 0.2131, "Acc.car": 0.8675, "Acc.cat": 0.8151, "Acc.ceiling": 0.5416, "Acc.chair": 0.3162, "Acc.cloth": 0.0431, "Acc.computer": 0.8782, "Acc.cow": 0.6345, "Acc.cup": 0.1311, "Acc.curtain": 0.4945, "Acc.dog": 0.76, "Acc.door": 0.5815, "Acc.fence": 0.6113, "Acc.floor": 0.477, "Acc.flower": 0.4204, "Acc.food": 0.7055, "Acc.grass": 0.5334, "Acc.ground": 0.0693, "Acc.horse": 0.913, "Acc.keyboard": 0.3827, "Acc.light": 0.0038, "Acc.motorbike": 0.7592, "Acc.mountain": 0.4599, "Acc.mouse": 0.0151, "Acc.person": 0.4128, "Acc.plate": 0.0029, "Acc.platform": 0.329, "Acc.pottedplant": 0.775, "Acc.road": 0.4003, "Acc.rock": 0.3978, "Acc.sheep": 0.8306, "Acc.shelves": 0.4083, "Acc.sidewalk": 0.5315, "Acc.sign": 0.4684, "Acc.sky": 0.6694, "Acc.snow": 0.6648, "Acc.sofa": 0.6646, "Acc.table": 0.4336, "Acc.track": 0.0013, "Acc.train": 0.8557, "Acc.tree": 0.4307, "Acc.truck": 0.1633, "Acc.tvmonitor": 0.3124, "Acc.wall": 0.121, "Acc.water": 0.3021, "Acc.window": 0.2785, "Acc.wood": 0.3228, "Prec.aeroplane": 0.4447, "Prec.bag": 0.4921, "Prec.bed": 0.0828, "Prec.bedclothes": 0.146, "Prec.bench": 0.0561, "Prec.bicycle": 0.5004, "Prec.bird": 0.5406, "Prec.boat": 0.2884, "Prec.book": NaN, "Prec.bottle": 0.5981, "Prec.building": 0.8042, "Prec.bus": 0.8423, "Prec.cabinet": 0.3946, "Prec.car": 0.7097, "Prec.cat": 0.8577, "Prec.ceiling": 0.4272, "Prec.chair": 0.5758, "Prec.cloth": 0.0331, "Prec.computer": 0.0246, "Prec.cow": 0.5767, "Prec.cup": 0.3057, "Prec.curtain": 0.1901, "Prec.dog": 0.8184, "Prec.door": 0.084, "Prec.fence": 0.1561, "Prec.floor": 0.5533, "Prec.flower": 0.2715, "Prec.food": 0.1872, "Prec.grass": 0.8488, "Prec.ground": 0.5941, "Prec.horse": 0.3193, "Prec.keyboard": 0.9632, "Prec.light": 0.1661, "Prec.motorbike": 0.6714, "Prec.mountain": 0.2557, "Prec.mouse": 0.0, "Prec.person": 0.7126, "Prec.plate": 0.0178, "Prec.platform": 0.1046, "Prec.pottedplant": 0.3792, "Prec.road": 0.5886, "Prec.rock": 0.2844, "Prec.sheep": 0.109, "Prec.shelves": 0.1117, "Prec.sidewalk": 0.1059, "Prec.sign": 0.3239, "Prec.sky": 0.9144, "Prec.snow": 0.373, "Prec.sofa": 0.378, "Prec.table": 0.4136, "Prec.track": 0.0033, "Prec.train": 0.5961, "Prec.tree": 0.8608, "Prec.truck": 0.1019, "Prec.tvmonitor": 0.6872, "Prec.wall": 0.6689, "Prec.water": 0.7622, "Prec.window": 0.2264, "Prec.wood": 0.1616}
{"mode": "train", "epoch": 4, "iter": 2050, "lr": 0.00267, "memory": 19335, "data_time": 30.23101, "decode.loss_ce": 1.4102, "decode.acc_seg": 34.0184, "loss": 1.4102, "time": 31.23149}
{"mode": "train", "epoch": 4, "iter": 2100, "lr": 0.00261, "memory": 19335, "data_time": 0.01027, "decode.loss_ce": 1.36189, "decode.acc_seg": 33.80188, "loss": 1.36189, "time": 1.01616}
{"mode": "train", "epoch": 4, "iter": 2150, "lr": 0.00255, "memory": 19335, "data_time": 0.00991, "decode.loss_ce": 1.41112, "decode.acc_seg": 34.67779, "loss": 1.41112, "time": 1.00525}
{"mode": "train", "epoch": 4, "iter": 2200, "lr": 0.00249, "memory": 19335, "data_time": 0.01063, "decode.loss_ce": 1.39225, "decode.acc_seg": 34.76833, "loss": 1.39225, "time": 1.02678}
{"mode": "train", "epoch": 4, "iter": 2250, "lr": 0.00243, "memory": 19335, "data_time": 0.0111, "decode.loss_ce": 1.38669, "decode.acc_seg": 33.81789, "loss": 1.38669, "time": 1.0299}
{"mode": "train", "epoch": 4, "iter": 2300, "lr": 0.00237, "memory": 19335, "data_time": 0.01111, "decode.loss_ce": 1.40006, "decode.acc_seg": 33.5391, "loss": 1.40006, "time": 1.02803}
{"mode": "train", "epoch": 4, "iter": 2350, "lr": 0.00231, "memory": 19335, "data_time": 0.01111, "decode.loss_ce": 1.36523, "decode.acc_seg": 33.27199, "loss": 1.36523, "time": 1.01602}
{"mode": "train", "epoch": 4, "iter": 2400, "lr": 0.00225, "memory": 19335, "data_time": 0.01141, "decode.loss_ce": 1.3494, "decode.acc_seg": 33.06678, "loss": 1.3494, "time": 1.02119}
{"mode": "train", "epoch": 4, "iter": 2450, "lr": 0.00219, "memory": 19335, "data_time": 0.01162, "decode.loss_ce": 1.39779, "decode.acc_seg": 34.08526, "loss": 1.39779, "time": 1.01473}
{"mode": "train", "epoch": 5, "iter": 2500, "lr": 0.00213, "memory": 19335, "data_time": 0.05694, "decode.loss_ce": 1.31501, "decode.acc_seg": 33.51472, "loss": 1.31501, "time": 1.06403}
{"mode": "train", "epoch": 5, "iter": 2550, "lr": 0.00207, "memory": 19335, "data_time": 0.01117, "decode.loss_ce": 1.44109, "decode.acc_seg": 35.56155, "loss": 1.44109, "time": 1.01805}
{"mode": "train", "epoch": 5, "iter": 2600, "lr": 0.00201, "memory": 19335, "data_time": 0.01153, "decode.loss_ce": 1.42046, "decode.acc_seg": 33.71482, "loss": 1.42046, "time": 1.01314}
{"mode": "train", "epoch": 5, "iter": 2650, "lr": 0.00194, "memory": 19335, "data_time": 0.01167, "decode.loss_ce": 1.47607, "decode.acc_seg": 34.59639, "loss": 1.47607, "time": 1.01276}
{"mode": "train", "epoch": 5, "iter": 2700, "lr": 0.00188, "memory": 19335, "data_time": 0.01169, "decode.loss_ce": 1.3984, "decode.acc_seg": 32.32183, "loss": 1.3984, "time": 1.0273}
{"mode": "train", "epoch": 5, "iter": 2750, "lr": 0.00182, "memory": 19335, "data_time": 0.01189, "decode.loss_ce": 1.37546, "decode.acc_seg": 35.27127, "loss": 1.37546, "time": 1.01864}
{"mode": "train", "epoch": 5, "iter": 2800, "lr": 0.00176, "memory": 19335, "data_time": 0.01211, "decode.loss_ce": 1.33589, "decode.acc_seg": 33.83637, "loss": 1.33589, "time": 1.01797}
{"mode": "train", "epoch": 5, "iter": 2850, "lr": 0.0017, "memory": 19335, "data_time": 0.012, "decode.loss_ce": 1.37946, "decode.acc_seg": 35.69143, "loss": 1.37946, "time": 1.02741}
{"mode": "train", "epoch": 5, "iter": 2900, "lr": 0.00163, "memory": 19335, "data_time": 0.0121, "decode.loss_ce": 1.37272, "decode.acc_seg": 35.6097, "loss": 1.37272, "time": 1.01657}
{"mode": "train", "epoch": 5, "iter": 2950, "lr": 0.00157, "memory": 19335, "data_time": 0.01216, "decode.loss_ce": 1.38883, "decode.acc_seg": 33.81675, "loss": 1.38883, "time": 1.01731}
{"mode": "train", "epoch": 5, "iter": 3000, "lr": 0.00151, "memory": 19335, "data_time": 0.01221, "decode.loss_ce": 1.27705, "decode.acc_seg": 34.33201, "loss": 1.27705, "time": 1.01861}
{"mode": "train", "epoch": 5, "iter": 3050, "lr": 0.00144, "memory": 19335, "data_time": 0.01225, "decode.loss_ce": 1.33568, "decode.acc_seg": 33.95116, "loss": 1.33568, "time": 1.02217}
{"mode": "train", "epoch": 5, "iter": 3100, "lr": 0.00138, "memory": 19335, "data_time": 0.01232, "decode.loss_ce": 1.35042, "decode.acc_seg": 33.41184, "loss": 1.35042, "time": 1.01393}
{"mode": "train", "epoch": 6, "iter": 3150, "lr": 0.00132, "memory": 19335, "data_time": 0.05723, "decode.loss_ce": 1.44545, "decode.acc_seg": 34.96305, "loss": 1.44545, "time": 1.06402}
{"mode": "train", "epoch": 6, "iter": 3200, "lr": 0.00125, "memory": 19335, "data_time": 0.01147, "decode.loss_ce": 1.35037, "decode.acc_seg": 35.43975, "loss": 1.35037, "time": 1.01801}
{"mode": "train", "epoch": 6, "iter": 3250, "lr": 0.00119, "memory": 19335, "data_time": 0.01179, "decode.loss_ce": 1.35022, "decode.acc_seg": 34.7879, "loss": 1.35022, "time": 1.02193}
{"mode": "train", "epoch": 6, "iter": 3300, "lr": 0.00112, "memory": 19335, "data_time": 0.0119, "decode.loss_ce": 1.36057, "decode.acc_seg": 34.15334, "loss": 1.36057, "time": 1.02003}
{"mode": "train", "epoch": 6, "iter": 3350, "lr": 0.00106, "memory": 19335, "data_time": 0.012, "decode.loss_ce": 1.34889, "decode.acc_seg": 35.68328, "loss": 1.34889, "time": 1.02729}
{"mode": "train", "epoch": 6, "iter": 3400, "lr": 0.00099, "memory": 19335, "data_time": 0.01213, "decode.loss_ce": 1.34107, "decode.acc_seg": 34.77615, "loss": 1.34107, "time": 1.02466}
{"mode": "train", "epoch": 6, "iter": 3450, "lr": 0.00092, "memory": 19335, "data_time": 0.01219, "decode.loss_ce": 1.35651, "decode.acc_seg": 34.37512, "loss": 1.35651, "time": 1.01736}
{"mode": "train", "epoch": 6, "iter": 3500, "lr": 0.00086, "memory": 19335, "data_time": 0.01222, "decode.loss_ce": 1.32385, "decode.acc_seg": 35.69716, "loss": 1.32385, "time": 1.02469}
{"mode": "train", "epoch": 6, "iter": 3550, "lr": 0.00079, "memory": 19335, "data_time": 0.01236, "decode.loss_ce": 1.32677, "decode.acc_seg": 34.4515, "loss": 1.32677, "time": 1.008}
{"mode": "train", "epoch": 6, "iter": 3600, "lr": 0.00072, "memory": 19335, "data_time": 0.01235, "decode.loss_ce": 1.31535, "decode.acc_seg": 34.11002, "loss": 1.31535, "time": 1.01604}
{"mode": "train", "epoch": 6, "iter": 3650, "lr": 0.00065, "memory": 19335, "data_time": 0.01241, "decode.loss_ce": 1.31862, "decode.acc_seg": 34.69451, "loss": 1.31862, "time": 1.01788}
{"mode": "train", "epoch": 6, "iter": 3700, "lr": 0.00058, "memory": 19335, "data_time": 0.01238, "decode.loss_ce": 1.31504, "decode.acc_seg": 35.51351, "loss": 1.31504, "time": 1.02004}
{"mode": "train", "epoch": 7, "iter": 3750, "lr": 0.00051, "memory": 19335, "data_time": 0.05876, "decode.loss_ce": 1.39247, "decode.acc_seg": 34.2741, "loss": 1.39247, "time": 1.06207}
{"mode": "train", "epoch": 7, "iter": 3800, "lr": 0.00043, "memory": 19335, "data_time": 0.01134, "decode.loss_ce": 1.29498, "decode.acc_seg": 34.26248, "loss": 1.29498, "time": 1.01595}
{"mode": "train", "epoch": 7, "iter": 3850, "lr": 0.00036, "memory": 19335, "data_time": 0.01174, "decode.loss_ce": 1.31202, "decode.acc_seg": 34.804, "loss": 1.31202, "time": 1.01596}
{"mode": "train", "epoch": 7, "iter": 3900, "lr": 0.00028, "memory": 19335, "data_time": 0.01204, "decode.loss_ce": 1.24893, "decode.acc_seg": 34.90473, "loss": 1.24893, "time": 1.02003}
{"mode": "train", "epoch": 7, "iter": 3950, "lr": 0.0002, "memory": 19335, "data_time": 0.01208, "decode.loss_ce": 1.3367, "decode.acc_seg": 34.99612, "loss": 1.3367, "time": 1.02198}
{"mode": "train", "epoch": 7, "iter": 4000, "lr": 0.0001, "memory": 19335, "data_time": 0.01212, "decode.loss_ce": 1.35495, "decode.acc_seg": 34.7275, "loss": 1.35495, "time": 1.07401}
{"mode": "val", "epoch": 7, "iter": 5104, "lr": 0.0001, "aAcc": 0.4643, "mIoU": 0.2596, "mAcc": 0.4715, "mPrec": 0.4044, "IoU.aeroplane": 0.4321, "IoU.bag": 0.1005, "IoU.bed": 0.0625, "IoU.bedclothes": 0.1278, "IoU.bench": 0.0519, "IoU.bicycle": 0.4695, "IoU.bird": 0.4615, "IoU.boat": 0.2611, "IoU.book": 0.0, "IoU.bottle": 0.5065, "IoU.building": 0.1708, "IoU.bus": 0.743, "IoU.cabinet": 0.1788, "IoU.car": 0.6401, "IoU.cat": 0.708, "IoU.ceiling": 0.3008, "IoU.chair": 0.2473, "IoU.cloth": 0.0228, "IoU.computer": 0.0236, "IoU.cow": 0.3872, "IoU.cup": 0.1648, "IoU.curtain": 0.1535, "IoU.dog": 0.631, "IoU.door": 0.0814, "IoU.fence": 0.1401, "IoU.floor": 0.3669, "IoU.flower": 0.2279, "IoU.food": 0.1828, "IoU.grass": 0.4448, "IoU.ground": 0.0523, "IoU.horse": 0.2906, "IoU.keyboard": 0.5267, "IoU.light": 0.0449, "IoU.motorbike": 0.5507, "IoU.mountain": 0.1796, "IoU.mouse": 0.0, "IoU.person": 0.3388, "IoU.plate": 0.0054, "IoU.platform": 0.0815, "IoU.pottedplant": 0.3558, "IoU.road": 0.2981, "IoU.rock": 0.2126, "IoU.sheep": 0.1042, "IoU.shelves": 0.098, "IoU.sidewalk": 0.0945, "IoU.sign": 0.2412, "IoU.sky": 0.6418, "IoU.snow": 0.2913, "IoU.sofa": 0.327, "IoU.table": 0.2715, "IoU.track": 0.0002, "IoU.train": 0.529, "IoU.tree": 0.3773, "IoU.truck": 0.0755, "IoU.tvmonitor": 0.3007, "IoU.wall": 0.1298, "IoU.water": 0.3428, "IoU.window": 0.1433, "IoU.wood": 0.1229, "Acc.aeroplane": 0.9163, "Acc.bag": 0.121, "Acc.bed": 0.2419, "Acc.bedclothes": 0.3751, "Acc.bench": 0.315, "Acc.bicycle": 0.905, "Acc.bird": 0.8127, "Acc.boat": 0.7305, "Acc.book": 0.0, "Acc.bottle": 0.7292, "Acc.building": 0.1776, "Acc.bus": 0.8501, "Acc.cabinet": 0.2444, "Acc.car": 0.8507, "Acc.cat": 0.8019, "Acc.ceiling": 0.5053, "Acc.chair": 0.2995, "Acc.cloth": 0.0506, "Acc.computer": 0.8549, "Acc.cow": 0.5667, "Acc.cup": 0.2375, "Acc.curtain": 0.4787, "Acc.dog": 0.7388, "Acc.door": 0.5703, "Acc.fence": 0.6201, "Acc.floor": 0.5487, "Acc.flower": 0.4296, "Acc.food": 0.649, "Acc.grass": 0.4816, "Acc.ground": 0.0549, "Acc.horse": 0.9117, "Acc.keyboard": 0.5395, "Acc.light": 0.0583, "Acc.motorbike": 0.7699, "Acc.mountain": 0.4135, "Acc.mouse": 0.0132, "Acc.person": 0.4021, "Acc.plate": 0.0069, "Acc.platform": 0.3065, "Acc.pottedplant": 0.7345, "Acc.road": 0.378, "Acc.rock": 0.4875, "Acc.sheep": 0.8287, "Acc.shelves": 0.3632, "Acc.sidewalk": 0.5602, "Acc.sign": 0.435, "Acc.sky": 0.6807, "Acc.snow": 0.7053, "Acc.sofa": 0.667, "Acc.table": 0.4147, "Acc.track": 0.0002, "Acc.train": 0.8254, "Acc.tree": 0.3966, "Acc.truck": 0.21, "Acc.tvmonitor": 0.3688, "Acc.wall": 0.1401, "Acc.water": 0.389, "Acc.window": 0.3205, "Acc.wood": 0.3314, "Prec.aeroplane": 0.4499, "Prec.bag": 0.3718, "Prec.bed": 0.0778, "Prec.bedclothes": 0.1624, "Prec.bench": 0.0585, "Prec.bicycle": 0.4938, "Prec.bird": 0.5164, "Prec.boat": 0.2889, "Prec.book": NaN, "Prec.bottle": 0.6238, "Prec.building": 0.8183, "Prec.bus": 0.855, "Prec.cabinet": 0.3999, "Prec.car": 0.7211, "Prec.cat": 0.858, "Prec.ceiling": 0.4264, "Prec.chair": 0.5864, "Prec.cloth": 0.0398, "Prec.computer": 0.0237, "Prec.cow": 0.5501, "Prec.cup": 0.35, "Prec.curtain": 0.1844, "Prec.dog": 0.8121, "Prec.door": 0.0867, "Prec.fence": 0.1533, "Prec.floor": 0.5254, "Prec.flower": 0.3267, "Prec.food": 0.2028, "Prec.grass": 0.8536, "Prec.ground": 0.5261, "Prec.horse": 0.2991, "Prec.keyboard": 0.9569, "Prec.light": 0.1636, "Prec.motorbike": 0.6592, "Prec.mountain": 0.2411, "Prec.mouse": 0.0, "Prec.person": 0.6826, "Prec.plate": 0.0245, "Prec.platform": 0.0999, "Prec.pottedplant": 0.4083, "Prec.road": 0.5851, "Prec.rock": 0.2737, "Prec.sheep": 0.1065, "Prec.shelves": 0.1184, "Prec.sidewalk": 0.102, "Prec.sign": 0.3512, "Prec.sky": 0.9182, "Prec.snow": 0.3317, "Prec.sofa": 0.3908, "Prec.table": 0.44, "Prec.track": 0.0005, "Prec.train": 0.5956, "Prec.tree": 0.886, "Prec.truck": 0.1055, "Prec.tvmonitor": 0.6199, "Prec.wall": 0.6383, "Prec.water": 0.7425, "Prec.window": 0.2058, "Prec.wood": 0.1635}
