{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Jan 17 2023, 23:13:24) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.2, V11.2.152\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.9.1+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.1+cu111\nOpenCV: 4.7.0\nMMCV: 1.5.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMSegmentation: 0.20.2+10a66e4", "seed": 1146771088, "exp_name": "maskclip_plus_vit16_segformer_b0_480x480_8k_pascal_context_59.py", "mmseg_version": "0.20.2+10a66e4", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='pretrain/mit_b0_weight.pth',\n    backbone=dict(\n        type='MixVisionTransformer',\n        in_channels=3,\n        embed_dims=32,\n        num_stages=4,\n        num_layers=[2, 2, 2, 2],\n        num_heads=[1, 2, 5, 8],\n        patch_sizes=[7, 3, 3, 3],\n        sr_ratios=[8, 4, 2, 1],\n        out_indices=(0, 1, 2, 3),\n        mlp_ratio=4,\n        qkv_bias=True,\n        drop_rate=0.0,\n        attn_drop_rate=0.0,\n        drop_path_rate=0.1,\n        pretrained='pretrain/mit_b0_weight.pth'),\n    decode_head=dict(\n        type='MaskClipPlusSegformerHead',\n        vit=True,\n        in_channels=2048,\n        channels=512,\n        num_classes=59,\n        dropout_ratio=0,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n        decode_module_cfg=dict(\n            type='SegformerHead',\n            in_channels=[32, 64, 160, 256],\n            in_index=[0, 1, 2, 3],\n            channels=512,\n            dropout_ratio=0.1,\n            num_classes=59,\n            norm_cfg=dict(type='SyncBN', requires_grad=True),\n            align_corners=False),\n        text_categories=59,\n        text_channels=512,\n        clip_channels=768,\n        text_embeddings_path='pretrain/context_ViT16_clip_text.pth',\n        cls_bg=False,\n        norm_feat=False,\n        clip_unlabeled_cats=[\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\n            53, 54, 55, 56, 57, 58\n        ],\n        clip_cfg=dict(\n            type='VisionTransformer',\n            img_size=(224, 224),\n            patch_size=16,\n            patch_bias=False,\n            in_channels=3,\n            embed_dims=768,\n            num_layers=12,\n            num_heads=12,\n            mlp_ratio=4,\n            out_indices=-1,\n            qkv_bias=True,\n            drop_rate=0.0,\n            attn_drop_rate=0.0,\n            drop_path_rate=0.0,\n            with_cls_token=True,\n            output_cls_token=False,\n            norm_cfg=dict(type='LN', eps=1e-06),\n            act_cfg=dict(type='GELU'),\n            patch_norm=False,\n            pre_norm=True,\n            final_norm=True,\n            return_qkv=True,\n            interpolate_mode='bicubic',\n            num_fcs=2,\n            norm_eval=False),\n        clip_weights_path='pretrain/ViT16_clip_weights.pth',\n        reset_counter=True,\n        start_clip_guided=(1, -1),\n        start_self_train=(-1, -1)),\n    feed_img_to_decode_head=True,\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'PascalContextDataset59'\ndata_root = 'data/VOCdevkit/VOC2010/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\nimg_scale = (520, 520)\ncrop_size = (480, 480)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='LoadAnnotations',\n        reduce_zero_label=True,\n        suppress_labels=[\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\n            53, 54, 55, 56, 57, 58\n        ]),\n    dict(type='Resize', img_scale=(520, 520), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(480, 480), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(480, 480), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(520, 520),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=4,\n    train=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/train.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='LoadAnnotations',\n                reduce_zero_label=True,\n                suppress_labels=[\n                    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n                    17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n                    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\n                    47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58\n                ]),\n            dict(type='Resize', img_scale=(520, 520), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(480, 480), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(480, 480), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(520, 520),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='PascalContextDataset59',\n        data_root='data/VOCdevkit/VOC2010/',\n        img_dir='JPEGImages',\n        ann_dir='SegmentationClassContext',\n        split='ImageSets/SegmentationContext/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(520, 520),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(\n    type='AdamW',\n    lr=0.006,\n    betas=(0.9, 0.999),\n    weight_decay=0.004,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0),\n            head=dict(lr_mult=10.0))))\noptimizer_config = dict()\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=8000)\ncheckpoint_config = dict(by_epoch=False, interval=4000)\nevaluation = dict(interval=4000, metric='mIoU', pre_eval=True)\nsuppress_labels = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58\n]\nfind_unused_parameters = True\nwork_dir = 'work_dirs/anno_free/vit-sfb0-8k-0.006-8'\ngpu_ids = range(0, 1)\nauto_resume = False\nseed = 1146771088\n", "CLASSES": ["aeroplane", "bag", "bed", "bedclothes", "bench", "bicycle", "bird", "boat", "book", "bottle", "building", "bus", "cabinet", "car", "cat", "ceiling", "chair", "cloth", "computer", "cow", "cup", "curtain", "dog", "door", "fence", "floor", "flower", "food", "grass", "ground", "horse", "keyboard", "light", "motorbike", "mountain", "mouse", "person", "plate", "platform", "pottedplant", "road", "rock", "sheep", "shelves", "sidewalk", "sign", "sky", "snow", "sofa", "table", "track", "train", "tree", "truck", "tvmonitor", "wall", "water", "window", "wood"], "PALETTE": [[180, 120, 120], [6, 230, 230], [80, 50, 50], [4, 200, 3], [120, 120, 80], [140, 140, 140], [204, 5, 255], [230, 230, 230], [4, 250, 7], [224, 5, 255], [235, 255, 7], [150, 5, 61], [120, 120, 70], [8, 255, 51], [255, 6, 82], [143, 255, 140], [204, 255, 4], [255, 51, 7], [204, 70, 3], [0, 102, 200], [61, 230, 250], [255, 6, 51], [11, 102, 255], [255, 7, 71], [255, 9, 224], [9, 7, 230], [220, 220, 220], [255, 9, 92], [112, 9, 255], [8, 255, 214], [7, 255, 224], [255, 184, 6], [10, 255, 71], [255, 41, 10], [7, 255, 255], [224, 255, 8], [102, 8, 255], [255, 61, 6], [255, 194, 7], [255, 122, 8], [0, 255, 20], [255, 8, 41], [255, 5, 153], [6, 51, 255], [235, 12, 255], [160, 150, 20], [0, 163, 255], [140, 140, 140], [250, 10, 15], [20, 255, 0], [31, 255, 0], [255, 31, 0], [255, 224, 0], [153, 255, 0], [0, 0, 255], [255, 71, 0], [0, 235, 255], [0, 173, 255], [31, 0, 255]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00019, "memory": 7729, "data_time": 0.02495, "decode.loss_ce": 2.62849, "decode.acc_seg": 11.79293, "loss": 2.62849, "time": 0.91338}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00039, "memory": 7729, "data_time": 0.01253, "decode.loss_ce": 2.10422, "decode.acc_seg": 21.39504, "loss": 2.10422, "time": 0.50684}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00058, "memory": 7729, "data_time": 0.01239, "decode.loss_ce": 2.11659, "decode.acc_seg": 19.96888, "loss": 2.11659, "time": 0.50633}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00078, "memory": 7729, "data_time": 0.01248, "decode.loss_ce": 2.04243, "decode.acc_seg": 18.6949, "loss": 2.04243, "time": 0.50699}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00097, "memory": 7729, "data_time": 0.01245, "decode.loss_ce": 2.14376, "decode.acc_seg": 19.46404, "loss": 2.14376, "time": 0.50706}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00115, "memory": 7729, "data_time": 0.01245, "decode.loss_ce": 2.11533, "decode.acc_seg": 17.20305, "loss": 2.11533, "time": 0.50741}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00134, "memory": 7729, "data_time": 0.01242, "decode.loss_ce": 2.10793, "decode.acc_seg": 16.43335, "loss": 2.10793, "time": 0.50742}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00152, "memory": 7729, "data_time": 0.01253, "decode.loss_ce": 2.12764, "decode.acc_seg": 17.78968, "loss": 2.12764, "time": 0.50746}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.0017, "memory": 7729, "data_time": 0.01251, "decode.loss_ce": 2.13678, "decode.acc_seg": 16.44905, "loss": 2.13678, "time": 0.50767}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00187, "memory": 7729, "data_time": 0.01242, "decode.loss_ce": 2.15126, "decode.acc_seg": 15.43118, "loss": 2.15126, "time": 0.50748}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00205, "memory": 7729, "data_time": 0.01241, "decode.loss_ce": 2.1014, "decode.acc_seg": 17.42772, "loss": 2.1014, "time": 0.50753}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00222, "memory": 7729, "data_time": 0.01243, "decode.loss_ce": 2.09725, "decode.acc_seg": 13.94918, "loss": 2.09725, "time": 0.50748}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.00239, "memory": 7729, "data_time": 0.05941, "decode.loss_ce": 2.21981, "decode.acc_seg": 14.82874, "loss": 2.21981, "time": 0.55449}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.00255, "memory": 7729, "data_time": 0.01243, "decode.loss_ce": 2.12636, "decode.acc_seg": 16.24391, "loss": 2.12636, "time": 0.50748}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.00272, "memory": 7729, "data_time": 0.01242, "decode.loss_ce": 2.18866, "decode.acc_seg": 15.99708, "loss": 2.18866, "time": 0.5075}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.00288, "memory": 7729, "data_time": 0.01249, "decode.loss_ce": 2.22371, "decode.acc_seg": 15.91531, "loss": 2.22371, "time": 0.50768}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.00304, "memory": 7729, "data_time": 0.01239, "decode.loss_ce": 2.18069, "decode.acc_seg": 15.50426, "loss": 2.18069, "time": 0.50747}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.00319, "memory": 7729, "data_time": 0.01245, "decode.loss_ce": 2.13234, "decode.acc_seg": 16.65467, "loss": 2.13234, "time": 0.50756}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.00335, "memory": 7729, "data_time": 0.01258, "decode.loss_ce": 2.14324, "decode.acc_seg": 17.30173, "loss": 2.14324, "time": 0.50761}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.0035, "memory": 7729, "data_time": 0.01243, "decode.loss_ce": 2.18694, "decode.acc_seg": 15.19573, "loss": 2.18694, "time": 0.50767}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.00365, "memory": 7729, "data_time": 0.01246, "decode.loss_ce": 2.21707, "decode.acc_seg": 14.67252, "loss": 2.21707, "time": 0.50795}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.00379, "memory": 7729, "data_time": 0.01243, "decode.loss_ce": 2.13593, "decode.acc_seg": 15.30046, "loss": 2.13593, "time": 0.50762}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.00394, "memory": 7729, "data_time": 0.01252, "decode.loss_ce": 2.05401, "decode.acc_seg": 14.65822, "loss": 2.05401, "time": 0.50806}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.00408, "memory": 7729, "data_time": 0.01074, "decode.loss_ce": 2.13663, "decode.acc_seg": 14.26532, "loss": 2.13663, "time": 0.50426}
{"mode": "train", "epoch": 3, "iter": 1250, "lr": 0.00422, "memory": 7729, "data_time": 0.05782, "decode.loss_ce": 2.12045, "decode.acc_seg": 15.0606, "loss": 2.12045, "time": 0.55162}
{"mode": "train", "epoch": 3, "iter": 1300, "lr": 0.00435, "memory": 7729, "data_time": 0.00994, "decode.loss_ce": 2.2029, "decode.acc_seg": 15.55197, "loss": 2.2029, "time": 0.50172}
{"mode": "train", "epoch": 3, "iter": 1350, "lr": 0.00449, "memory": 7729, "data_time": 0.00981, "decode.loss_ce": 2.14269, "decode.acc_seg": 14.789, "loss": 2.14269, "time": 0.50154}
{"mode": "train", "epoch": 3, "iter": 1400, "lr": 0.00462, "memory": 7729, "data_time": 0.01004, "decode.loss_ce": 2.20001, "decode.acc_seg": 15.56879, "loss": 2.20001, "time": 0.50234}
{"mode": "train", "epoch": 3, "iter": 1450, "lr": 0.00475, "memory": 7729, "data_time": 0.01003, "decode.loss_ce": 2.11315, "decode.acc_seg": 15.02883, "loss": 2.11315, "time": 0.50231}
{"mode": "train", "epoch": 3, "iter": 1500, "lr": 0.00487, "memory": 7729, "data_time": 0.00991, "decode.loss_ce": 2.08413, "decode.acc_seg": 15.36426, "loss": 2.08413, "time": 0.50192}
{"mode": "train", "epoch": 3, "iter": 1550, "lr": 0.00484, "memory": 7729, "data_time": 0.00984, "decode.loss_ce": 2.21604, "decode.acc_seg": 15.15991, "loss": 2.21604, "time": 0.50212}
{"mode": "train", "epoch": 3, "iter": 1600, "lr": 0.0048, "memory": 7729, "data_time": 0.00995, "decode.loss_ce": 2.1247, "decode.acc_seg": 14.47703, "loss": 2.1247, "time": 0.50244}
{"mode": "train", "epoch": 3, "iter": 1650, "lr": 0.00476, "memory": 7729, "data_time": 0.01025, "decode.loss_ce": 2.18664, "decode.acc_seg": 15.9067, "loss": 2.18664, "time": 0.50268}
{"mode": "train", "epoch": 3, "iter": 1700, "lr": 0.00473, "memory": 7729, "data_time": 0.01037, "decode.loss_ce": 2.19638, "decode.acc_seg": 15.2459, "loss": 2.19638, "time": 0.5031}
{"mode": "train", "epoch": 3, "iter": 1750, "lr": 0.00469, "memory": 7729, "data_time": 0.01039, "decode.loss_ce": 2.1356, "decode.acc_seg": 15.77901, "loss": 2.1356, "time": 0.50307}
{"mode": "train", "epoch": 3, "iter": 1800, "lr": 0.00465, "memory": 7729, "data_time": 0.01034, "decode.loss_ce": 2.11618, "decode.acc_seg": 14.8322, "loss": 2.11618, "time": 0.5031}
{"mode": "train", "epoch": 3, "iter": 1850, "lr": 0.00461, "memory": 7729, "data_time": 0.0104, "decode.loss_ce": 2.17216, "decode.acc_seg": 15.68185, "loss": 2.17216, "time": 0.503}
{"mode": "train", "epoch": 4, "iter": 1900, "lr": 0.00458, "memory": 7729, "data_time": 0.05525, "decode.loss_ce": 2.15827, "decode.acc_seg": 16.02215, "loss": 2.15827, "time": 0.54824}
{"mode": "train", "epoch": 4, "iter": 1950, "lr": 0.00454, "memory": 7729, "data_time": 0.01036, "decode.loss_ce": 2.11248, "decode.acc_seg": 15.97225, "loss": 2.11248, "time": 0.50324}
{"mode": "train", "epoch": 4, "iter": 2000, "lr": 0.0045, "memory": 7729, "data_time": 0.01041, "decode.loss_ce": 2.10017, "decode.acc_seg": 16.10808, "loss": 2.10017, "time": 0.50297}
{"mode": "train", "epoch": 4, "iter": 2050, "lr": 0.00446, "memory": 7729, "data_time": 0.01056, "decode.loss_ce": 2.16244, "decode.acc_seg": 16.12961, "loss": 2.16244, "time": 0.50311}
{"mode": "train", "epoch": 4, "iter": 2100, "lr": 0.00443, "memory": 7729, "data_time": 0.01058, "decode.loss_ce": 2.14892, "decode.acc_seg": 14.80351, "loss": 2.14892, "time": 0.50272}
{"mode": "train", "epoch": 4, "iter": 2150, "lr": 0.00439, "memory": 7729, "data_time": 0.01071, "decode.loss_ce": 2.09659, "decode.acc_seg": 15.79912, "loss": 2.09659, "time": 0.50326}
{"mode": "train", "epoch": 4, "iter": 2200, "lr": 0.00435, "memory": 7729, "data_time": 0.01087, "decode.loss_ce": 2.05219, "decode.acc_seg": 15.948, "loss": 2.05219, "time": 0.50363}
{"mode": "train", "epoch": 4, "iter": 2250, "lr": 0.00431, "memory": 7729, "data_time": 0.01085, "decode.loss_ce": 2.16071, "decode.acc_seg": 16.96112, "loss": 2.16071, "time": 0.5041}
{"mode": "train", "epoch": 4, "iter": 2300, "lr": 0.00428, "memory": 7729, "data_time": 0.01082, "decode.loss_ce": 2.10598, "decode.acc_seg": 15.63699, "loss": 2.10598, "time": 0.50347}
{"mode": "train", "epoch": 4, "iter": 2350, "lr": 0.00424, "memory": 7729, "data_time": 0.01112, "decode.loss_ce": 2.09582, "decode.acc_seg": 15.5811, "loss": 2.09582, "time": 0.50403}
{"mode": "train", "epoch": 4, "iter": 2400, "lr": 0.0042, "memory": 7729, "data_time": 0.011, "decode.loss_ce": 2.12756, "decode.acc_seg": 17.59772, "loss": 2.12756, "time": 0.50407}
{"mode": "train", "epoch": 4, "iter": 2450, "lr": 0.00416, "memory": 7729, "data_time": 0.01098, "decode.loss_ce": 2.09801, "decode.acc_seg": 17.06308, "loss": 2.09801, "time": 0.50389}
{"mode": "train", "epoch": 5, "iter": 2500, "lr": 0.00413, "memory": 7729, "data_time": 0.05718, "decode.loss_ce": 2.12319, "decode.acc_seg": 17.48675, "loss": 2.12319, "time": 0.55029}
{"mode": "train", "epoch": 5, "iter": 2550, "lr": 0.00409, "memory": 7729, "data_time": 0.01045, "decode.loss_ce": 2.06284, "decode.acc_seg": 18.97917, "loss": 2.06284, "time": 0.50255}
{"mode": "train", "epoch": 5, "iter": 2600, "lr": 0.00405, "memory": 7729, "data_time": 0.01048, "decode.loss_ce": 2.03071, "decode.acc_seg": 17.98034, "loss": 2.03071, "time": 0.50285}
{"mode": "train", "epoch": 5, "iter": 2650, "lr": 0.00401, "memory": 7729, "data_time": 0.01046, "decode.loss_ce": 2.09045, "decode.acc_seg": 17.05468, "loss": 2.09045, "time": 0.50276}
{"mode": "train", "epoch": 5, "iter": 2700, "lr": 0.00398, "memory": 7729, "data_time": 0.01067, "decode.loss_ce": 2.15805, "decode.acc_seg": 17.59247, "loss": 2.15805, "time": 0.50343}
{"mode": "train", "epoch": 5, "iter": 2750, "lr": 0.00394, "memory": 7729, "data_time": 0.0108, "decode.loss_ce": 2.02822, "decode.acc_seg": 16.80718, "loss": 2.02822, "time": 0.50346}
{"mode": "train", "epoch": 5, "iter": 2800, "lr": 0.0039, "memory": 7729, "data_time": 0.01078, "decode.loss_ce": 2.06002, "decode.acc_seg": 17.40668, "loss": 2.06002, "time": 0.50373}
{"mode": "train", "epoch": 5, "iter": 2850, "lr": 0.00386, "memory": 7729, "data_time": 0.01091, "decode.loss_ce": 2.1242, "decode.acc_seg": 17.63386, "loss": 2.1242, "time": 0.50359}
{"mode": "train", "epoch": 5, "iter": 2900, "lr": 0.00383, "memory": 7729, "data_time": 0.01085, "decode.loss_ce": 2.04197, "decode.acc_seg": 17.4065, "loss": 2.04197, "time": 0.50368}
{"mode": "train", "epoch": 5, "iter": 2950, "lr": 0.00379, "memory": 7729, "data_time": 0.01092, "decode.loss_ce": 2.09903, "decode.acc_seg": 17.28105, "loss": 2.09903, "time": 0.50397}
{"mode": "train", "epoch": 5, "iter": 3000, "lr": 0.00375, "memory": 7729, "data_time": 0.01098, "decode.loss_ce": 2.13266, "decode.acc_seg": 18.29544, "loss": 2.13266, "time": 0.50388}
{"mode": "train", "epoch": 5, "iter": 3050, "lr": 0.00371, "memory": 7729, "data_time": 0.01101, "decode.loss_ce": 2.13897, "decode.acc_seg": 18.38452, "loss": 2.13897, "time": 0.50375}
{"mode": "train", "epoch": 5, "iter": 3100, "lr": 0.00368, "memory": 7729, "data_time": 0.01108, "decode.loss_ce": 2.17106, "decode.acc_seg": 18.44556, "loss": 2.17106, "time": 0.5038}
{"mode": "train", "epoch": 6, "iter": 3150, "lr": 0.00364, "memory": 7729, "data_time": 0.05777, "decode.loss_ce": 2.02675, "decode.acc_seg": 17.40622, "loss": 2.02675, "time": 0.55027}
{"mode": "train", "epoch": 6, "iter": 3200, "lr": 0.0036, "memory": 7729, "data_time": 0.01078, "decode.loss_ce": 2.04368, "decode.acc_seg": 17.92296, "loss": 2.04368, "time": 0.50305}
{"mode": "train", "epoch": 6, "iter": 3250, "lr": 0.00356, "memory": 7729, "data_time": 0.0107, "decode.loss_ce": 2.06594, "decode.acc_seg": 18.70501, "loss": 2.06594, "time": 0.50302}
{"mode": "train", "epoch": 6, "iter": 3300, "lr": 0.00353, "memory": 7729, "data_time": 0.01076, "decode.loss_ce": 2.06153, "decode.acc_seg": 19.19735, "loss": 2.06153, "time": 0.50396}
{"mode": "train", "epoch": 6, "iter": 3350, "lr": 0.00349, "memory": 7729, "data_time": 0.01075, "decode.loss_ce": 2.04862, "decode.acc_seg": 18.0214, "loss": 2.04862, "time": 0.50285}
{"mode": "train", "epoch": 6, "iter": 3400, "lr": 0.00345, "memory": 7729, "data_time": 0.01075, "decode.loss_ce": 2.0712, "decode.acc_seg": 17.38521, "loss": 2.0712, "time": 0.50283}
{"mode": "train", "epoch": 6, "iter": 3450, "lr": 0.00341, "memory": 7729, "data_time": 0.01092, "decode.loss_ce": 2.04148, "decode.acc_seg": 18.15122, "loss": 2.04148, "time": 0.50345}
{"mode": "train", "epoch": 6, "iter": 3500, "lr": 0.00338, "memory": 7729, "data_time": 0.01085, "decode.loss_ce": 2.05818, "decode.acc_seg": 19.00392, "loss": 2.05818, "time": 0.5031}
{"mode": "train", "epoch": 6, "iter": 3550, "lr": 0.00334, "memory": 7729, "data_time": 0.01077, "decode.loss_ce": 2.0613, "decode.acc_seg": 17.8727, "loss": 2.0613, "time": 0.50281}
{"mode": "train", "epoch": 6, "iter": 3600, "lr": 0.0033, "memory": 7729, "data_time": 0.01098, "decode.loss_ce": 1.96819, "decode.acc_seg": 17.21601, "loss": 1.96819, "time": 0.50366}
{"mode": "train", "epoch": 6, "iter": 3650, "lr": 0.00326, "memory": 7729, "data_time": 0.01101, "decode.loss_ce": 1.95726, "decode.acc_seg": 18.78613, "loss": 1.95726, "time": 0.50389}
{"mode": "train", "epoch": 6, "iter": 3700, "lr": 0.00323, "memory": 7729, "data_time": 0.01105, "decode.loss_ce": 2.07355, "decode.acc_seg": 16.79392, "loss": 2.07355, "time": 0.50386}
{"mode": "train", "epoch": 7, "iter": 3750, "lr": 0.00319, "memory": 7729, "data_time": 0.05739, "decode.loss_ce": 2.11809, "decode.acc_seg": 19.72418, "loss": 2.11809, "time": 0.55027}
{"mode": "train", "epoch": 7, "iter": 3800, "lr": 0.00315, "memory": 7729, "data_time": 0.01055, "decode.loss_ce": 2.00709, "decode.acc_seg": 18.5763, "loss": 2.00709, "time": 0.50281}
{"mode": "train", "epoch": 7, "iter": 3850, "lr": 0.00311, "memory": 7729, "data_time": 0.01074, "decode.loss_ce": 2.10186, "decode.acc_seg": 18.08883, "loss": 2.10186, "time": 0.50281}
{"mode": "train", "epoch": 7, "iter": 3900, "lr": 0.00308, "memory": 7729, "data_time": 0.01057, "decode.loss_ce": 1.99809, "decode.acc_seg": 16.90525, "loss": 1.99809, "time": 0.50264}
{"mode": "train", "epoch": 7, "iter": 3950, "lr": 0.00304, "memory": 7729, "data_time": 0.01077, "decode.loss_ce": 2.07472, "decode.acc_seg": 17.75299, "loss": 2.07472, "time": 0.50346}
{"mode": "train", "epoch": 7, "iter": 4000, "lr": 0.003, "memory": 7729, "data_time": 0.01081, "decode.loss_ce": 2.06462, "decode.acc_seg": 18.5684, "loss": 2.06462, "time": 0.51737}
{"mode": "val", "epoch": 7, "iter": 5104, "lr": 0.003, "aAcc": 0.3474, "mIoU": 0.0918, "mAcc": 0.1774, "mPrec": 0.2556, "IoU.aeroplane": 0.121, "IoU.bag": 0.0, "IoU.bed": 0.0148, "IoU.bedclothes": 0.0, "IoU.bench": 0.0, "IoU.bicycle": 0.0698, "IoU.bird": 0.0755, "IoU.boat": 0.0016, "IoU.book": 0.0, "IoU.bottle": 0.0012, "IoU.building": 0.0494, "IoU.bus": 0.1987, "IoU.cabinet": 0.048, "IoU.car": 0.222, "IoU.cat": 0.3128, "IoU.ceiling": 0.1186, "IoU.chair": 0.032, "IoU.cloth": 0.0237, "IoU.computer": 0.0, "IoU.cow": 0.0598, "IoU.cup": 0.0016, "IoU.curtain": 0.0009, "IoU.dog": 0.1414, "IoU.door": 0.0593, "IoU.fence": 0.043, "IoU.floor": 0.1435, "IoU.flower": 0.0294, "IoU.food": 0.0175, "IoU.grass": 0.4847, "IoU.ground": 0.2076, "IoU.horse": 0.0792, "IoU.keyboard": 0.0001, "IoU.light": 0.0271, "IoU.motorbike": 0.2112, "IoU.mountain": 0.1057, "IoU.mouse": 0.0, "IoU.person": 0.2556, "IoU.plate": 0.0006, "IoU.platform": 0.0, "IoU.pottedplant": 0.1381, "IoU.road": 0.2347, "IoU.rock": 0.0008, "IoU.sheep": 0.1232, "IoU.shelves": 0.0, "IoU.sidewalk": 0.0364, "IoU.sign": 0.002, "IoU.sky": 0.5596, "IoU.snow": 0.0407, "IoU.sofa": 0.0348, "IoU.table": 0.0128, "IoU.track": 0.0, "IoU.train": 0.106, "IoU.tree": 0.3646, "IoU.truck": 0.0001, "IoU.tvmonitor": 0.0741, "IoU.wall": 0.2662, "IoU.water": 0.2338, "IoU.window": 0.0093, "IoU.wood": 0.024, "Acc.aeroplane": 0.7377, "Acc.bag": 0.0, "Acc.bed": 0.0224, "Acc.bedclothes": 0.0, "Acc.bench": 0.0, "Acc.bicycle": 0.0849, "Acc.bird": 0.1687, "Acc.boat": 0.0017, "Acc.book": 0.0, "Acc.bottle": 0.0012, "Acc.building": 0.0512, "Acc.bus": 0.262, "Acc.cabinet": 0.1235, "Acc.car": 0.5691, "Acc.cat": 0.6487, "Acc.ceiling": 0.1837, "Acc.chair": 0.0371, "Acc.cloth": 0.1253, "Acc.computer": 0.0, "Acc.cow": 0.2595, "Acc.cup": 0.0017, "Acc.curtain": 0.0009, "Acc.dog": 0.2029, "Acc.door": 0.3585, "Acc.fence": 0.0543, "Acc.floor": 0.1743, "Acc.flower": 0.039, "Acc.food": 0.1789, "Acc.grass": 0.773, "Acc.ground": 0.4338, "Acc.horse": 0.404, "Acc.keyboard": 0.0001, "Acc.light": 0.0895, "Acc.motorbike": 0.4677, "Acc.mountain": 0.3172, "Acc.mouse": 0.0, "Acc.person": 0.402, "Acc.plate": 0.0006, "Acc.platform": 0.0, "Acc.pottedplant": 0.2515, "Acc.road": 0.3608, "Acc.rock": 0.0008, "Acc.sheep": 0.4469, "Acc.shelves": 0.0, "Acc.sidewalk": 0.0739, "Acc.sign": 0.002, "Acc.sky": 0.6244, "Acc.snow": 0.0465, "Acc.sofa": 0.0383, "Acc.table": 0.0188, "Acc.track": 0.0, "Acc.train": 0.2309, "Acc.tree": 0.44, "Acc.truck": 0.0001, "Acc.tvmonitor": 0.0827, "Acc.wall": 0.3168, "Acc.water": 0.2408, "Acc.window": 0.0094, "Acc.wood": 0.1085, "Prec.aeroplane": 0.1264, "Prec.bag": NaN, "Prec.bed": 0.0421, "Prec.bedclothes": 0.0082, "Prec.bench": NaN, "Prec.bicycle": 0.281, "Prec.bird": 0.1203, "Prec.boat": 0.0235, "Prec.book": NaN, "Prec.bottle": 0.0551, "Prec.building": 0.5799, "Prec.bus": 0.451, "Prec.cabinet": 0.0729, "Prec.car": 0.2669, "Prec.cat": 0.3766, "Prec.ceiling": 0.2507, "Prec.chair": 0.1885, "Prec.cloth": 0.0284, "Prec.computer": 0.0, "Prec.cow": 0.0722, "Prec.cup": 0.0228, "Prec.curtain": 0.5757, "Prec.dog": 0.318, "Prec.door": 0.0663, "Prec.fence": 0.1715, "Prec.floor": 0.4477, "Prec.flower": 0.1062, "Prec.food": 0.019, "Prec.grass": 0.5652, "Prec.ground": 0.2848, "Prec.horse": 0.0896, "Prec.keyboard": 1.0, "Prec.light": 0.0374, "Prec.motorbike": 0.2781, "Prec.mountain": 0.1368, "Prec.mouse": NaN, "Prec.person": 0.4125, "Prec.plate": 0.0108, "Prec.platform": NaN, "Prec.pottedplant": 0.2345, "Prec.road": 0.4017, "Prec.rock": 0.0861, "Prec.sheep": 0.1453, "Prec.shelves": NaN, "Prec.sidewalk": 0.0671, "Prec.sign": 0.2816, "Prec.sky": 0.8436, "Prec.snow": 0.2452, "Prec.sofa": 0.2754, "Prec.table": 0.0383, "Prec.track": NaN, "Prec.train": 0.1638, "Prec.tree": 0.6804, "Prec.truck": 0.002, "Prec.tvmonitor": 0.4167, "Prec.wall": 0.6252, "Prec.water": 0.8894, "Prec.window": 0.3809, "Prec.wood": 0.0299}
{"mode": "train", "epoch": 7, "iter": 4050, "lr": 0.00296, "memory": 7729, "data_time": 16.25942, "decode.loss_ce": 1.93385, "decode.acc_seg": 18.01662, "loss": 1.93385, "time": 16.75363}
{"mode": "train", "epoch": 7, "iter": 4100, "lr": 0.00293, "memory": 7729, "data_time": 0.00991, "decode.loss_ce": 1.95162, "decode.acc_seg": 18.7134, "loss": 1.95162, "time": 0.50231}
{"mode": "train", "epoch": 7, "iter": 4150, "lr": 0.00289, "memory": 7729, "data_time": 0.00998, "decode.loss_ce": 2.03893, "decode.acc_seg": 18.77366, "loss": 2.03893, "time": 0.50421}
{"mode": "train", "epoch": 7, "iter": 4200, "lr": 0.00285, "memory": 7729, "data_time": 0.01029, "decode.loss_ce": 2.03469, "decode.acc_seg": 19.30273, "loss": 2.03469, "time": 0.50549}
{"mode": "train", "epoch": 7, "iter": 4250, "lr": 0.00281, "memory": 7729, "data_time": 0.01034, "decode.loss_ce": 2.03567, "decode.acc_seg": 19.00712, "loss": 2.03567, "time": 0.50526}
{"mode": "train", "epoch": 7, "iter": 4300, "lr": 0.00278, "memory": 7729, "data_time": 0.01026, "decode.loss_ce": 2.05017, "decode.acc_seg": 18.95604, "loss": 2.05017, "time": 0.50472}
{"mode": "train", "epoch": 7, "iter": 4350, "lr": 0.00274, "memory": 7729, "data_time": 0.01021, "decode.loss_ce": 2.05726, "decode.acc_seg": 18.25941, "loss": 2.05726, "time": 0.50439}
{"mode": "train", "epoch": 8, "iter": 4400, "lr": 0.0027, "memory": 7729, "data_time": 0.05695, "decode.loss_ce": 1.83762, "decode.acc_seg": 18.88732, "loss": 1.83762, "time": 0.54997}
{"mode": "train", "epoch": 8, "iter": 4450, "lr": 0.00266, "memory": 7729, "data_time": 0.01021, "decode.loss_ce": 1.97998, "decode.acc_seg": 18.96059, "loss": 1.97998, "time": 0.5026}
{"mode": "train", "epoch": 8, "iter": 4500, "lr": 0.00263, "memory": 7729, "data_time": 0.0102, "decode.loss_ce": 2.02443, "decode.acc_seg": 19.73021, "loss": 2.02443, "time": 0.50256}
{"mode": "train", "epoch": 8, "iter": 4550, "lr": 0.00259, "memory": 7729, "data_time": 0.01023, "decode.loss_ce": 2.01808, "decode.acc_seg": 18.28657, "loss": 2.01808, "time": 0.50257}
{"mode": "train", "epoch": 8, "iter": 4600, "lr": 0.00255, "memory": 7729, "data_time": 0.01041, "decode.loss_ce": 1.94865, "decode.acc_seg": 19.16157, "loss": 1.94865, "time": 0.50267}
{"mode": "train", "epoch": 8, "iter": 4650, "lr": 0.00251, "memory": 7729, "data_time": 0.01057, "decode.loss_ce": 2.03632, "decode.acc_seg": 18.34689, "loss": 2.03632, "time": 0.50327}
{"mode": "train", "epoch": 8, "iter": 4700, "lr": 0.00248, "memory": 7729, "data_time": 0.01068, "decode.loss_ce": 1.94465, "decode.acc_seg": 17.48131, "loss": 1.94465, "time": 0.50347}
{"mode": "train", "epoch": 8, "iter": 4750, "lr": 0.00244, "memory": 7729, "data_time": 0.01061, "decode.loss_ce": 2.04861, "decode.acc_seg": 20.25651, "loss": 2.04861, "time": 0.50316}
{"mode": "train", "epoch": 8, "iter": 4800, "lr": 0.0024, "memory": 7729, "data_time": 0.01078, "decode.loss_ce": 2.03067, "decode.acc_seg": 20.13418, "loss": 2.03067, "time": 0.50371}
{"mode": "train", "epoch": 8, "iter": 4850, "lr": 0.00236, "memory": 7729, "data_time": 0.01088, "decode.loss_ce": 2.06982, "decode.acc_seg": 19.48277, "loss": 2.06982, "time": 0.50391}
{"mode": "train", "epoch": 8, "iter": 4900, "lr": 0.00233, "memory": 7729, "data_time": 0.01089, "decode.loss_ce": 2.05089, "decode.acc_seg": 18.67366, "loss": 2.05089, "time": 0.50395}
{"mode": "train", "epoch": 8, "iter": 4950, "lr": 0.00229, "memory": 7729, "data_time": 0.01085, "decode.loss_ce": 2.0328, "decode.acc_seg": 20.00329, "loss": 2.0328, "time": 0.50378}
{"mode": "train", "epoch": 9, "iter": 5000, "lr": 0.00225, "memory": 7729, "data_time": 0.05553, "decode.loss_ce": 1.94053, "decode.acc_seg": 19.89073, "loss": 1.94053, "time": 0.5485}
{"mode": "train", "epoch": 9, "iter": 5050, "lr": 0.00221, "memory": 7729, "data_time": 0.01042, "decode.loss_ce": 1.93803, "decode.acc_seg": 19.31746, "loss": 1.93803, "time": 0.5029}
{"mode": "train", "epoch": 9, "iter": 5100, "lr": 0.00218, "memory": 7729, "data_time": 0.01039, "decode.loss_ce": 1.92516, "decode.acc_seg": 20.2982, "loss": 1.92516, "time": 0.50265}
{"mode": "train", "epoch": 9, "iter": 5150, "lr": 0.00214, "memory": 7729, "data_time": 0.01055, "decode.loss_ce": 1.92495, "decode.acc_seg": 19.50731, "loss": 1.92495, "time": 0.50305}
{"mode": "train", "epoch": 9, "iter": 5200, "lr": 0.0021, "memory": 7729, "data_time": 0.01054, "decode.loss_ce": 2.00153, "decode.acc_seg": 21.0023, "loss": 2.00153, "time": 0.50326}
{"mode": "train", "epoch": 9, "iter": 5250, "lr": 0.00206, "memory": 7729, "data_time": 0.01083, "decode.loss_ce": 2.05984, "decode.acc_seg": 18.78306, "loss": 2.05984, "time": 0.50394}
{"mode": "train", "epoch": 9, "iter": 5300, "lr": 0.00203, "memory": 7729, "data_time": 0.01086, "decode.loss_ce": 1.9555, "decode.acc_seg": 21.07022, "loss": 1.9555, "time": 0.50375}
{"mode": "train", "epoch": 9, "iter": 5350, "lr": 0.00199, "memory": 7729, "data_time": 0.01069, "decode.loss_ce": 2.03771, "decode.acc_seg": 20.06793, "loss": 2.03771, "time": 0.50335}
{"mode": "train", "epoch": 9, "iter": 5400, "lr": 0.00195, "memory": 7729, "data_time": 0.01072, "decode.loss_ce": 1.92323, "decode.acc_seg": 19.28548, "loss": 1.92323, "time": 0.5033}
{"mode": "train", "epoch": 9, "iter": 5450, "lr": 0.00191, "memory": 7729, "data_time": 0.01088, "decode.loss_ce": 1.94096, "decode.acc_seg": 20.67432, "loss": 1.94096, "time": 0.50374}
{"mode": "train", "epoch": 9, "iter": 5500, "lr": 0.00188, "memory": 7729, "data_time": 0.01088, "decode.loss_ce": 1.84588, "decode.acc_seg": 22.01517, "loss": 1.84588, "time": 0.50361}
{"mode": "train", "epoch": 9, "iter": 5550, "lr": 0.00184, "memory": 7729, "data_time": 0.01109, "decode.loss_ce": 1.92107, "decode.acc_seg": 19.72207, "loss": 1.92107, "time": 0.50404}
{"mode": "train", "epoch": 9, "iter": 5600, "lr": 0.0018, "memory": 7729, "data_time": 0.01112, "decode.loss_ce": 1.89984, "decode.acc_seg": 22.14432, "loss": 1.89984, "time": 0.50419}
{"mode": "train", "epoch": 10, "iter": 5650, "lr": 0.00176, "memory": 7729, "data_time": 0.05802, "decode.loss_ce": 1.88614, "decode.acc_seg": 22.65373, "loss": 1.88614, "time": 0.55068}
{"mode": "train", "epoch": 10, "iter": 5700, "lr": 0.00173, "memory": 7729, "data_time": 0.0106, "decode.loss_ce": 1.95313, "decode.acc_seg": 20.64942, "loss": 1.95313, "time": 0.50304}
{"mode": "train", "epoch": 10, "iter": 5750, "lr": 0.00169, "memory": 7729, "data_time": 0.01074, "decode.loss_ce": 1.94371, "decode.acc_seg": 21.56551, "loss": 1.94371, "time": 0.50319}
{"mode": "train", "epoch": 10, "iter": 5800, "lr": 0.00165, "memory": 7729, "data_time": 0.01081, "decode.loss_ce": 1.88687, "decode.acc_seg": 21.74719, "loss": 1.88687, "time": 0.5033}
{"mode": "train", "epoch": 10, "iter": 5850, "lr": 0.00161, "memory": 7729, "data_time": 0.011, "decode.loss_ce": 1.90857, "decode.acc_seg": 21.78575, "loss": 1.90857, "time": 0.50363}
{"mode": "train", "epoch": 10, "iter": 5900, "lr": 0.00158, "memory": 7729, "data_time": 0.01104, "decode.loss_ce": 1.9729, "decode.acc_seg": 22.0735, "loss": 1.9729, "time": 0.50387}
{"mode": "train", "epoch": 10, "iter": 5950, "lr": 0.00154, "memory": 7729, "data_time": 0.01099, "decode.loss_ce": 1.8855, "decode.acc_seg": 21.27015, "loss": 1.8855, "time": 0.50388}
{"mode": "train", "epoch": 10, "iter": 6000, "lr": 0.0015, "memory": 7729, "data_time": 0.01116, "decode.loss_ce": 1.89689, "decode.acc_seg": 21.9292, "loss": 1.89689, "time": 0.50403}
{"mode": "train", "epoch": 10, "iter": 6050, "lr": 0.00146, "memory": 7729, "data_time": 0.01121, "decode.loss_ce": 1.90265, "decode.acc_seg": 21.69022, "loss": 1.90265, "time": 0.50382}
{"mode": "train", "epoch": 10, "iter": 6100, "lr": 0.00143, "memory": 7729, "data_time": 0.01118, "decode.loss_ce": 1.88813, "decode.acc_seg": 21.55836, "loss": 1.88813, "time": 0.50371}
{"mode": "train", "epoch": 10, "iter": 6150, "lr": 0.00139, "memory": 7729, "data_time": 0.01119, "decode.loss_ce": 1.85823, "decode.acc_seg": 21.51756, "loss": 1.85823, "time": 0.50422}
{"mode": "train", "epoch": 10, "iter": 6200, "lr": 0.00135, "memory": 7729, "data_time": 0.01108, "decode.loss_ce": 1.8851, "decode.acc_seg": 20.116, "loss": 1.8851, "time": 0.50401}
{"mode": "train", "epoch": 11, "iter": 6250, "lr": 0.00131, "memory": 7729, "data_time": 0.05728, "decode.loss_ce": 1.87755, "decode.acc_seg": 21.81997, "loss": 1.87755, "time": 0.54976}
{"mode": "train", "epoch": 11, "iter": 6300, "lr": 0.00128, "memory": 7729, "data_time": 0.01049, "decode.loss_ce": 1.79361, "decode.acc_seg": 22.14563, "loss": 1.79361, "time": 0.50253}
{"mode": "train", "epoch": 11, "iter": 6350, "lr": 0.00124, "memory": 7729, "data_time": 0.01053, "decode.loss_ce": 1.84871, "decode.acc_seg": 21.9161, "loss": 1.84871, "time": 0.50281}
{"mode": "train", "epoch": 11, "iter": 6400, "lr": 0.0012, "memory": 7729, "data_time": 0.0106, "decode.loss_ce": 1.89758, "decode.acc_seg": 22.6357, "loss": 1.89758, "time": 0.50307}
{"mode": "train", "epoch": 11, "iter": 6450, "lr": 0.00116, "memory": 7729, "data_time": 0.0106, "decode.loss_ce": 1.93198, "decode.acc_seg": 22.45309, "loss": 1.93198, "time": 0.50347}
{"mode": "train", "epoch": 11, "iter": 6500, "lr": 0.00113, "memory": 7729, "data_time": 0.01072, "decode.loss_ce": 1.84651, "decode.acc_seg": 23.34935, "loss": 1.84651, "time": 0.50347}
{"mode": "train", "epoch": 11, "iter": 6550, "lr": 0.00109, "memory": 7729, "data_time": 0.01067, "decode.loss_ce": 1.79168, "decode.acc_seg": 22.0541, "loss": 1.79168, "time": 0.50275}
{"mode": "train", "epoch": 11, "iter": 6600, "lr": 0.00105, "memory": 7729, "data_time": 0.01077, "decode.loss_ce": 1.85404, "decode.acc_seg": 22.64008, "loss": 1.85404, "time": 0.50311}
{"mode": "train", "epoch": 11, "iter": 6650, "lr": 0.00101, "memory": 7729, "data_time": 0.01082, "decode.loss_ce": 1.86288, "decode.acc_seg": 22.62964, "loss": 1.86288, "time": 0.50357}
{"mode": "train", "epoch": 11, "iter": 6700, "lr": 0.00098, "memory": 7729, "data_time": 0.01083, "decode.loss_ce": 1.86594, "decode.acc_seg": 24.29964, "loss": 1.86594, "time": 0.50342}
{"mode": "train", "epoch": 11, "iter": 6750, "lr": 0.00094, "memory": 7729, "data_time": 0.01093, "decode.loss_ce": 1.80612, "decode.acc_seg": 23.10875, "loss": 1.80612, "time": 0.50336}
{"mode": "train", "epoch": 11, "iter": 6800, "lr": 0.0009, "memory": 7729, "data_time": 0.01115, "decode.loss_ce": 1.89877, "decode.acc_seg": 22.51057, "loss": 1.89877, "time": 0.5042}
{"mode": "train", "epoch": 11, "iter": 6850, "lr": 0.00086, "memory": 7729, "data_time": 0.011, "decode.loss_ce": 1.82789, "decode.acc_seg": 22.71375, "loss": 1.82789, "time": 0.50383}
{"mode": "train", "epoch": 12, "iter": 6900, "lr": 0.00083, "memory": 7729, "data_time": 0.05677, "decode.loss_ce": 1.88016, "decode.acc_seg": 23.66738, "loss": 1.88016, "time": 0.5496}
{"mode": "train", "epoch": 12, "iter": 6950, "lr": 0.00079, "memory": 7729, "data_time": 0.01051, "decode.loss_ce": 1.85455, "decode.acc_seg": 23.51719, "loss": 1.85455, "time": 0.50272}
{"mode": "train", "epoch": 12, "iter": 7000, "lr": 0.00075, "memory": 7729, "data_time": 0.01062, "decode.loss_ce": 1.87572, "decode.acc_seg": 23.54047, "loss": 1.87572, "time": 0.50318}
{"mode": "train", "epoch": 12, "iter": 7050, "lr": 0.00071, "memory": 7729, "data_time": 0.0108, "decode.loss_ce": 1.77831, "decode.acc_seg": 23.65427, "loss": 1.77831, "time": 0.5033}
{"mode": "train", "epoch": 12, "iter": 7100, "lr": 0.00068, "memory": 7729, "data_time": 0.01064, "decode.loss_ce": 1.77785, "decode.acc_seg": 25.02864, "loss": 1.77785, "time": 0.50303}
{"mode": "train", "epoch": 12, "iter": 7150, "lr": 0.00064, "memory": 7729, "data_time": 0.01061, "decode.loss_ce": 1.82756, "decode.acc_seg": 23.5053, "loss": 1.82756, "time": 0.50299}
{"mode": "train", "epoch": 12, "iter": 7200, "lr": 0.0006, "memory": 7729, "data_time": 0.01075, "decode.loss_ce": 1.80621, "decode.acc_seg": 24.47306, "loss": 1.80621, "time": 0.50321}
{"mode": "train", "epoch": 12, "iter": 7250, "lr": 0.00056, "memory": 7729, "data_time": 0.01078, "decode.loss_ce": 1.7419, "decode.acc_seg": 24.64299, "loss": 1.7419, "time": 0.50343}
{"mode": "train", "epoch": 12, "iter": 7300, "lr": 0.00053, "memory": 7729, "data_time": 0.01085, "decode.loss_ce": 1.83598, "decode.acc_seg": 24.71286, "loss": 1.83598, "time": 0.50348}
{"mode": "train", "epoch": 12, "iter": 7350, "lr": 0.00049, "memory": 7729, "data_time": 0.0109, "decode.loss_ce": 1.78817, "decode.acc_seg": 24.62476, "loss": 1.78817, "time": 0.50339}
{"mode": "train", "epoch": 12, "iter": 7400, "lr": 0.00045, "memory": 7729, "data_time": 0.01112, "decode.loss_ce": 1.82824, "decode.acc_seg": 23.63213, "loss": 1.82824, "time": 0.50382}
{"mode": "train", "epoch": 12, "iter": 7450, "lr": 0.00041, "memory": 7729, "data_time": 0.0111, "decode.loss_ce": 1.81809, "decode.acc_seg": 24.06394, "loss": 1.81809, "time": 0.50391}
{"mode": "train", "epoch": 13, "iter": 7500, "lr": 0.00038, "memory": 7729, "data_time": 0.05766, "decode.loss_ce": 1.76934, "decode.acc_seg": 24.72122, "loss": 1.76934, "time": 0.55018}
{"mode": "train", "epoch": 13, "iter": 7550, "lr": 0.00034, "memory": 7729, "data_time": 0.01058, "decode.loss_ce": 1.70941, "decode.acc_seg": 23.7956, "loss": 1.70941, "time": 0.50277}
{"mode": "train", "epoch": 13, "iter": 7600, "lr": 0.0003, "memory": 7729, "data_time": 0.01057, "decode.loss_ce": 1.79079, "decode.acc_seg": 25.5588, "loss": 1.79079, "time": 0.50273}
{"mode": "train", "epoch": 13, "iter": 7650, "lr": 0.00026, "memory": 7729, "data_time": 0.01067, "decode.loss_ce": 1.8153, "decode.acc_seg": 23.68545, "loss": 1.8153, "time": 0.50317}
{"mode": "train", "epoch": 13, "iter": 7700, "lr": 0.00023, "memory": 7729, "data_time": 0.01075, "decode.loss_ce": 1.7779, "decode.acc_seg": 26.45135, "loss": 1.7779, "time": 0.50344}
{"mode": "train", "epoch": 13, "iter": 7750, "lr": 0.00019, "memory": 7729, "data_time": 0.01073, "decode.loss_ce": 1.71445, "decode.acc_seg": 26.13956, "loss": 1.71445, "time": 0.50328}
{"mode": "train", "epoch": 13, "iter": 7800, "lr": 0.00015, "memory": 7729, "data_time": 0.01083, "decode.loss_ce": 1.78139, "decode.acc_seg": 24.15305, "loss": 1.78139, "time": 0.50335}
{"mode": "train", "epoch": 13, "iter": 7850, "lr": 0.00011, "memory": 7729, "data_time": 0.01082, "decode.loss_ce": 1.75945, "decode.acc_seg": 25.62813, "loss": 1.75945, "time": 0.50353}
{"mode": "train", "epoch": 13, "iter": 7900, "lr": 8e-05, "memory": 7729, "data_time": 0.0109, "decode.loss_ce": 1.78635, "decode.acc_seg": 26.32039, "loss": 1.78635, "time": 0.50341}
{"mode": "train", "epoch": 13, "iter": 7950, "lr": 4e-05, "memory": 7729, "data_time": 0.01089, "decode.loss_ce": 1.7626, "decode.acc_seg": 24.30438, "loss": 1.7626, "time": 0.50352}
{"mode": "train", "epoch": 13, "iter": 8000, "lr": 0.0, "memory": 7729, "data_time": 0.0109, "decode.loss_ce": 1.72539, "decode.acc_seg": 24.89063, "loss": 1.72539, "time": 0.5172}
{"mode": "val", "epoch": 13, "iter": 5104, "lr": 0.0, "aAcc": 0.4442, "mIoU": 0.1661, "mAcc": 0.2888, "mPrec": 0.328, "IoU.aeroplane": 0.2739, "IoU.bag": 0.0, "IoU.bed": 0.0348, "IoU.bedclothes": 0.0173, "IoU.bench": 0.0, "IoU.bicycle": 0.2748, "IoU.bird": 0.2341, "IoU.boat": 0.1736, "IoU.book": 0.0269, "IoU.bottle": 0.043, "IoU.building": 0.0934, "IoU.bus": 0.4515, "IoU.cabinet": 0.0415, "IoU.car": 0.393, "IoU.cat": 0.4543, "IoU.ceiling": 0.2061, "IoU.chair": 0.089, "IoU.cloth": 0.0299, "IoU.computer": 0.0134, "IoU.cow": 0.1487, "IoU.cup": 0.0012, "IoU.curtain": 0.0941, "IoU.dog": 0.331, "IoU.door": 0.0591, "IoU.fence": 0.0401, "IoU.floor": 0.2951, "IoU.flower": 0.0507, "IoU.food": 0.0385, "IoU.grass": 0.5442, "IoU.ground": 0.2228, "IoU.horse": 0.2497, "IoU.keyboard": 0.1547, "IoU.light": 0.0455, "IoU.motorbike": 0.3723, "IoU.mountain": 0.1797, "IoU.mouse": 0.0, "IoU.person": 0.3898, "IoU.plate": 0.0037, "IoU.platform": 0.0, "IoU.pottedplant": 0.2111, "IoU.road": 0.3282, "IoU.rock": 0.0879, "IoU.sheep": 0.2417, "IoU.shelves": 0.0013, "IoU.sidewalk": 0.0735, "IoU.sign": 0.0221, "IoU.sky": 0.5734, "IoU.snow": 0.1597, "IoU.sofa": 0.1711, "IoU.table": 0.0601, "IoU.track": 0.0, "IoU.train": 0.2292, "IoU.tree": 0.418, "IoU.truck": 0.0073, "IoU.tvmonitor": 0.18, "IoU.wall": 0.2973, "IoU.water": 0.5374, "IoU.window": 0.0945, "IoU.wood": 0.032, "Acc.aeroplane": 0.7244, "Acc.bag": 0.0, "Acc.bed": 0.1046, "Acc.bedclothes": 0.0182, "Acc.bench": 0.0, "Acc.bicycle": 0.6599, "Acc.bird": 0.4758, "Acc.boat": 0.4954, "Acc.book": 0.0278, "Acc.bottle": 0.0486, "Acc.building": 0.0989, "Acc.bus": 0.7763, "Acc.cabinet": 0.1135, "Acc.car": 0.767, "Acc.cat": 0.7372, "Acc.ceiling": 0.4693, "Acc.chair": 0.1194, "Acc.cloth": 0.1774, "Acc.computer": 0.0195, "Acc.cow": 0.1881, "Acc.cup": 0.0015, "Acc.curtain": 0.109, "Acc.dog": 0.4726, "Acc.door": 0.4162, "Acc.fence": 0.0428, "Acc.floor": 0.4324, "Acc.flower": 0.0892, "Acc.food": 0.5156, "Acc.grass": 0.6925, "Acc.ground": 0.419, "Acc.horse": 0.5605, "Acc.keyboard": 0.1675, "Acc.light": 0.2528, "Acc.motorbike": 0.6088, "Acc.mountain": 0.2707, "Acc.mouse": 0.0, "Acc.person": 0.5071, "Acc.plate": 0.0045, "Acc.platform": 0.0, "Acc.pottedplant": 0.4, "Acc.road": 0.4844, "Acc.rock": 0.1275, "Acc.sheep": 0.3445, "Acc.shelves": 0.0013, "Acc.sidewalk": 0.233, "Acc.sign": 0.0241, "Acc.sky": 0.5932, "Acc.snow": 0.2025, "Acc.sofa": 0.2381, "Acc.table": 0.193, "Acc.track": 0.0, "Acc.train": 0.5759, "Acc.tree": 0.4922, "Acc.truck": 0.0098, "Acc.tvmonitor": 0.2202, "Acc.wall": 0.3937, "Acc.water": 0.6517, "Acc.window": 0.1165, "Acc.wood": 0.151, "Prec.aeroplane": 0.3058, "Prec.bag": NaN, "Prec.bed": 0.0495, "Prec.bedclothes": 0.2608, "Prec.bench": NaN, "Prec.bicycle": 0.3202, "Prec.bird": 0.3155, "Prec.boat": 0.2108, "Prec.book": 0.4616, "Prec.bottle": 0.2726, "Prec.building": 0.6236, "Prec.bus": 0.5191, "Prec.cabinet": 0.0614, "Prec.car": 0.4463, "Prec.cat": 0.5421, "Prec.ceiling": 0.2688, "Prec.chair": 0.2591, "Prec.cloth": 0.0347, "Prec.computer": 0.0409, "Prec.cow": 0.4152, "Prec.cup": 0.0074, "Prec.curtain": 0.4074, "Prec.dog": 0.525, "Prec.door": 0.0644, "Prec.fence": 0.3911, "Prec.floor": 0.4817, "Prec.flower": 0.1049, "Prec.food": 0.0399, "Prec.grass": 0.7175, "Prec.ground": 0.3224, "Prec.horse": 0.3104, "Prec.keyboard": 0.6698, "Prec.light": 0.0526, "Prec.motorbike": 0.4894, "Prec.mountain": 0.3485, "Prec.mouse": NaN, "Prec.person": 0.6276, "Prec.plate": 0.0196, "Prec.platform": NaN, "Prec.pottedplant": 0.3088, "Prec.road": 0.5045, "Prec.rock": 0.2208, "Prec.sheep": 0.4473, "Prec.shelves": 0.2163, "Prec.sidewalk": 0.0969, "Prec.sign": 0.2138, "Prec.sky": 0.9449, "Prec.snow": 0.4301, "Prec.sofa": 0.3781, "Prec.table": 0.0802, "Prec.track": 0.0, "Prec.train": 0.2758, "Prec.tree": 0.7351, "Prec.truck": 0.0283, "Prec.tvmonitor": 0.4968, "Prec.wall": 0.5485, "Prec.water": 0.754, "Prec.window": 0.3334, "Prec.wood": 0.0391}
